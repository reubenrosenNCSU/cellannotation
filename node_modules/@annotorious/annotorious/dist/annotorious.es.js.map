{"version":3,"file":"annotorious.es.js","sources":["../../../node_modules/svelte/src/runtime/internal/utils.js","../../../node_modules/svelte/src/runtime/internal/dom.js","../../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../../node_modules/svelte/src/runtime/internal/scheduler.js","../../../node_modules/svelte/src/runtime/internal/transitions.js","../../../node_modules/svelte/src/runtime/internal/each.js","../../../node_modules/svelte/src/runtime/internal/Component.js","../../../node_modules/svelte/src/shared/version.js","../../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../src/model/core/Shape.ts","../src/model/core/shapeUtils.ts","../src/model/core/ellipse/ellipseUtils.ts","../src/model/core/polygon/polygonUtils.ts","../src/model/core/rectangle/rectangleUtils.ts","../src/model/core/ImageAnnotation.ts","../src/model/w3c/fragment/FragmentSelector.ts","../src/model/w3c/svg/SVG.ts","../src/model/w3c/svg/SVGSelector.ts","../../../node_modules/uuid/dist/esm-browser/stringify.js","../../../node_modules/uuid/dist/esm-browser/rng.js","../../../node_modules/uuid/dist/esm-browser/native.js","../../../node_modules/uuid/dist/esm-browser/v4.js","../../annotorious-core/dist/annotorious-core.es.js","../src/model/w3c/W3CImageFormatAdapter.ts","../src/annotation/editors/polygon/PolygonEditor.svelte","../src/annotation/utils/math.ts","../../../node_modules/svelte/src/runtime/store/index.js","../src/annotation/utils/responsive.ts","../src/annotation/utils/touch.ts","../src/annotation/editors/Handle.svelte","../src/annotation/editors/rectangle/RectangleEditor.svelte","../src/annotation/editors/editorsRegistry.ts","../src/annotation/editors/Editor.svelte","../src/annotation/utils/styling.ts","../src/annotation/editors/EditorMount.svelte","../src/annotation/tools/ToolMount.svelte","../src/annotation/tools/rectangle/RubberbandRectangle.svelte","../src/annotation/tools/polygon/RubberbandPolygon.svelte","../src/annotation/tools/drawingToolsRegistry.ts","../src/annotation/shapes/Ellipse.svelte","../src/annotation/shapes/Polygon.svelte","../src/annotation/shapes/Rectangle.svelte","../src/annotation/Transform.ts","../src/annotation/SVGAnnotationLayerPointerEvent.ts","../src/annotation/SVGAnnotationLayer.svelte","../../../node_modules/quickselect/index.js","../../../node_modules/rbush/index.js","../src/state/spatialTree.ts","../src/state/ImageAnnotatorState.ts","../src/themes/smart/setTheme.ts","../src/AnnotoriousOpts.ts","../src/keyboardCommands.ts","../src/Annotorious.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","import type { AbstractSelector } from '@annotorious/core';\n\nexport interface Shape extends AbstractSelector {\n\n  type: ShapeType;\n\n  geometry: Geometry;\n\n}\n\nexport enum ShapeType {\n\n  ELLIPSE = 'ELLIPSE',\n\n  POLYGON = 'POLYGON',\n\n  RECTANGLE = 'RECTANGLE'\n\n}\n\nexport interface Geometry {\n\n  bounds: Bounds;\n\n}\n\nexport interface Bounds {\n\n  minX: number;\n\n  minY: number;\n\n  maxX: number;\n\n  maxY: number;\n\n}","import type { Bounds, Shape, ShapeType } from './Shape';\n\nexport interface ShapeUtil<T extends Shape> {\n\n  area: (shape: T) => number;\n\n  intersects: (shape: T, x: number, y: number) => boolean;\n\n}\n\nconst Utils: { [key: string]: ShapeUtil<any> } = {};\n\n/**\n * Registers a new ShapeUtil for a given shape type.\n * @param type the shape type\n * @param util the ShapeUtil implementation for this shape type\n */\nexport const registerShapeUtil = (type: ShapeType | string, util: ShapeUtil<any>) =>\n  (Utils[type] = util);\n\n/**\n * Computes the area of the given shape. Delegates to the corresponding ShapeUtil.\n * @param shape the shape\n */\nexport const computeArea = (shape: Shape) => Utils[shape.type].area(shape);\n\n/**\n * Tests if the given shape intersects the given point. Delegates to\n * the corresponding ShapeUtil.\n * @param shape the shape\n * @param x point x coord\n * @param y point y coord\n * @returns true if shape and point intersect\n */\nexport const intersects = (shape: Shape, x: number, y: number): boolean =>\n  Utils[shape.type].intersects(shape, x, y);\n\n/**\n * Computes Bounds from a given list of points.\n * @param points the points\n * @returns the Bounds\n */\nexport const boundsFromPoints = (points: Array<[number, number]>): Bounds => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n\n  points.forEach(([x, y]) => {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  });\n\n  return { minX, minY, maxX, maxY };\n};","import { ShapeType } from '../Shape';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\nimport type { Ellipse } from './Ellipse';\n\nconst EllipseUtil: ShapeUtil<Ellipse> = {\n\n  area: (e: Ellipse): number => Math.PI * e.geometry.rx * e.geometry.ry,\n\n  intersects: (e: Ellipse, x: number, y: number): boolean => {\n    const { cx, cy, rx, ry } = e.geometry;\n\n    // For future use\n    const rot = 0;\n\n    const cos = Math.cos(rot);\n    const sin = Math.sin(rot);\n  \n    const dx  = x - cx;\n    const dy  = y - cy;\n  \n    const tdx = cos * dx + sin * dy;\n    const tdy = sin * dx - cos * dy;\n  \n    return (tdx * tdx) / (rx * rx) + (tdy * tdy) / (ry * ry) <= 1;\n  }\n};\n\nregisterShapeUtil(ShapeType.ELLIPSE, EllipseUtil);","import { ShapeType } from '../Shape';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\nimport type { Polygon } from './Polygon';\n\nconst PolygonUtil: ShapeUtil<Polygon> = {\n\n  area: (polygon: Polygon): number => {\n    const { points } = polygon.geometry;\n\n    let area = 0;\n    let j = points.length - 1;\n\n    for (let i = 0; i < points.length; i++) {\n      area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n      j = i;\n    }\n\n    return Math.abs(0.5 * area);\n  },\n\n  intersects: (polygon: Polygon, x: number, y: number): boolean => {\n    // Based on https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\n    const { points } = polygon.geometry;\n\n    let inside = false;\n\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\n      const xi = points[i][0],\n        yi = points[i][1];\n      const xj = points[j][0],\n        yj = points[j][1];\n\n      const intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n  \n};\n\nregisterShapeUtil(ShapeType.POLYGON, PolygonUtil);","import { ShapeType } from '../Shape';\nimport type { Rectangle } from './Rectangle';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\n\nexport const RectangleUtil: ShapeUtil<Rectangle> = {\n\n  area: (rect: Rectangle): number => rect.geometry.w * rect.geometry.h,\n\n  intersects: (rect: Rectangle, x: number, y: number): boolean =>\n    x >= rect.geometry.x &&\n    x <= rect.geometry.x + rect.geometry.w &&\n    y >= rect.geometry.y &&\n    y <= rect.geometry.y + rect.geometry.h\n    \n};\n\nregisterShapeUtil(ShapeType.RECTANGLE, RectangleUtil);","import type { Annotation, AnnotationTarget } from '@annotorious/core';\nimport type { Shape } from './Shape';\n\nexport interface ImageAnnotation extends Annotation {\n\n  target: ImageAnnotationTarget;\n\n}\n\nexport interface ImageAnnotationTarget extends AnnotationTarget {\n\n  selector: Shape\n\n}\n\nexport const isImageAnnotation = <T extends Annotation>(\n  a: T | ImageAnnotation\n): a is ImageAnnotation =>\n  isImageAnnotationTarget(a.target);\n\n export const isImageAnnotationTarget = <T extends AnnotationTarget>(\n  t: T | ImageAnnotationTarget\n): t is ImageAnnotationTarget =>\n  t?.annotation !== undefined &&\n (t as ImageAnnotationTarget)?.selector?.geometry?.bounds !== undefined;\n","import type { Rectangle, RectangleGeometry } from '../../core';\nimport { ShapeType } from '../../core';\n\nexport interface FragmentSelector {\n\n  type: 'FragmentSelector';\n\n  conformsTo: 'http://www.w3.org/TR/media-frags/',\n\n  value: string;\n\n}\n\nexport const parseFragmentSelector = (\n  fragmentOrSelector: FragmentSelector | string,\n  invertY = false\n): Rectangle => {\n\n  const fragment =\n    typeof fragmentOrSelector === 'string' ? fragmentOrSelector : fragmentOrSelector.value;\n\n  const regex = /^(xywh)=(pixel|percent)?:?(.+?),(.+?),(.+?),(.+)*/g;\n\n  const matches = [...fragment.matchAll(regex)][0];\n  const [_, prefix, unit, a, b, c, d] = matches;\n\n  if (prefix !== 'xywh') throw new Error('Unsupported MediaFragment: ' + fragment);\n\n  if (unit && unit !== 'pixel') throw new Error(`Unsupported MediaFragment unit: ${unit}`);\n\n  const [x, y, w, h] = [a, b, c, d].map(parseFloat);\n\n  return {\n    type: ShapeType.RECTANGLE,\n    geometry: {\n      x,\n      y,\n      w,\n      h,\n      bounds: {\n        minX: x,\n        minY: invertY ? y - h : y,\n        maxX: x + w,\n        maxY: invertY ? y : y + h\n      }\n    }\n  }\n}\n\nexport const serializeFragmentSelector = (geometry: RectangleGeometry): FragmentSelector => {\n  const { x, y, w, h } = geometry;\n  \n  return {\n    type: 'FragmentSelector',\n    conformsTo: 'http://www.w3.org/TR/media-frags/',\n    value: `xywh=pixel:${x},${y},${w},${h}`\n  };\n}\n","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nexport const sanitize = (doc: Element | Document) => {\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \n  // for the basic approach\n  const cleanEl = (el: Element) => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on'))\n        el.removeAttribute(attr.name)\n    });\n  }\n\n  // Remove script tags\n  const scripts = doc.getElementsByTagName('script');\n\n  Array.from(scripts).reverse().forEach(el => el.parentNode!.removeChild(el));\n\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\n\n  return doc;\n}\n\n/** Helper that forces an un-namespaced node to SVG **/\nexport const insertSVGNamespace = (originalDoc: Document): Element => {\n  // Serialize and parse for the namespace to take effect on every node\n  const serializer = new XMLSerializer();\n  const str = serializer.serializeToString(originalDoc.documentElement);\n\n  // Doesn't seem that there's a clean cross-browser way for this...\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\n\n  const parser = new DOMParser();\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\n  return namespacedDoc.documentElement;\n}\n","import type { Ellipse, EllipseGeometry, Polygon, PolygonGeometry, Shape } from '../../core';\nimport { boundsFromPoints, ShapeType } from '../../core';\nimport { insertSVGNamespace, sanitize, SVG_NAMESPACE } from './SVG';\n\nexport interface SVGSelector {\n\n  type: 'SvgSelector';\n\n  value: string;\n\n}\n\nconst parseSVGXML = (value: string): Element => {\n  const parser = new DOMParser();\n\n  const doc = parser.parseFromString(value, \"image/svg+xml\");\n\n  // SVG needs a namespace declaration - check if it's set or insert if not\n  const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\n  const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\n\n  if (isPrefixDeclared || isDefaultNamespaceSVG) {\n    return sanitize(doc).firstChild as Element;\n  } else {\n    return sanitize(insertSVGNamespace(doc)).firstChild as Element;\n  }\n}\n\nconst parseSVGPolygon = (value: string): Polygon => {\n  const [a, b, str] = value.match(/(<polygon points=[\"|'])([^(\"|')]*)/) || [];\n  const points = str.split(' ').map((p) => p.split(',').map(parseFloat));\n\n  return {\n    type: ShapeType.POLYGON,\n    geometry: {\n      points,\n      bounds: boundsFromPoints(points as [number, number][])\n    }\n  };\n}\n\nconst parseSVGEllipse = (value: string): Ellipse => {\n  const doc = parseSVGXML(value);\n\n  const cx = parseFloat(doc.getAttribute('cx')!);\n  const cy = parseFloat(doc.getAttribute('cy')!);\n  const rx = parseFloat(doc.getAttribute('rx')!);\n  const ry = parseFloat(doc.getAttribute('ry')!);\n\n  const bounds = {\n    minX: cx - rx,\n    minY: cy - ry,\n    maxX: cx + rx,\n    maxY: cy + ry\n  };\n\n  return {\n    type: ShapeType.ELLIPSE,\n    geometry: {\n      cx,\n      cy,\n      rx,\n      ry,\n      bounds\n    }\n  };\n}\n\nexport const parseSVGSelector = <T extends Shape>(valueOrSelector: SVGSelector | string): T => {\n  const value = typeof valueOrSelector === 'string' ? valueOrSelector : valueOrSelector.value;\n\n  if (value.includes('<polygon points='))\n    return parseSVGPolygon(value) as unknown as T;\n  else if (value.includes('<ellipse ')) \n    return parseSVGEllipse(value) as unknown as T;\n  else \n    throw 'Unsupported SVG shape: ' + value;\n}\n\nexport const serializeSVGSelector = (shape: Shape): SVGSelector => {\n  let value: string | undefined;\n\n  if (shape.type === ShapeType.POLYGON) {\n    const geom = shape.geometry as PolygonGeometry;\n    const { points } = geom;\n    value = `<svg><polygon points=\"${points.map((xy) => xy.join(',')).join(' ')}\" /></svg>`;\n  } else if (shape.type === ShapeType.ELLIPSE) {\n    const geom = shape.geometry as EllipseGeometry;\n    value = `<svg><ellipse cx=\"${geom.cx}\" cy=\"${geom.cy}\" rx=\"${geom.rx}\" ry=\"${geom.ry}\" /></svg>`\n  }\n\n  if (value) {\n    return { type: 'SvgSelector', value };\n  } else {\n    throw `Unsupported shape type: ${shape.type}`;\n  }\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random || (options.rng || rng)();\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","var M = Object.prototype.hasOwnProperty;\nfunction k(e, t) {\n  var n, o;\n  if (e === t) return !0;\n  if (e && t && (n = e.constructor) === t.constructor) {\n    if (n === Date) return e.getTime() === t.getTime();\n    if (n === RegExp) return e.toString() === t.toString();\n    if (n === Array) {\n      if ((o = e.length) === t.length)\n        for (; o-- && k(e[o], t[o]); ) ;\n      return o === -1;\n    }\n    if (!n || typeof e == \"object\") {\n      o = 0;\n      for (n in e)\n        if (M.call(e, n) && ++o && !M.call(t, n) || !(n in t) || !k(e[n], t[n])) return !1;\n      return Object.keys(t).length === o;\n    }\n  }\n  return e !== e && t !== t;\n}\nfunction V() {\n}\nfunction X(e, t) {\n  return e != e ? t == t : e !== t || e && typeof e == \"object\" || typeof e == \"function\";\n}\nconst N = [];\nfunction j(e, t = V) {\n  let n;\n  const o = /* @__PURE__ */ new Set();\n  function s(b) {\n    if (X(e, b) && (e = b, n)) {\n      const w = !N.length;\n      for (const m of o)\n        m[1](), N.push(m, e);\n      if (w) {\n        for (let m = 0; m < N.length; m += 2)\n          N[m][0](N[m + 1]);\n        N.length = 0;\n      }\n    }\n  }\n  function f(b) {\n    s(b(e));\n  }\n  function A(b, w = V) {\n    const m = [b, w];\n    return o.add(m), o.size === 1 && (n = t(s, f) || V), b(e), () => {\n      o.delete(m), o.size === 0 && n && (n(), n = null);\n    };\n  }\n  return { set: s, update: f, subscribe: A };\n}\nconst Ue = (e) => {\n  const { subscribe: t, set: n } = j();\n  let o;\n  return t((s) => o = s), e.observe(({ changes: s }) => {\n    if (o) {\n      (s.deleted || []).some((b) => b.id === o) && n(void 0);\n      const A = (s.updated || []).find(({ oldValue: b }) => b.id === o);\n      A && n(A.newValue.id);\n    }\n  }), {\n    get current() {\n      return o;\n    },\n    subscribe: t,\n    set: n\n  };\n};\nvar Z = /* @__PURE__ */ ((e) => (e.EDIT = \"EDIT\", e.SELECT = \"SELECT\", e.NONE = \"NONE\", e))(Z || {});\nconst z = { selected: [] }, Se = (e, t, n) => {\n  const { subscribe: o, set: s } = j(z);\n  let f = t, A = z;\n  o((h) => A = h);\n  const b = () => {\n    k(A, z) || s(z);\n  }, w = () => {\n    var h;\n    return ((h = A.selected) == null ? void 0 : h.length) === 0;\n  }, m = (h) => {\n    if (w())\n      return !1;\n    const C = typeof h == \"string\" ? h : h.id;\n    return A.selected.some((D) => D.id === C);\n  }, U = (h, C) => {\n    let D;\n    if (Array.isArray(h)) {\n      if (D = h.map((i) => e.getAnnotation(i)).filter(Boolean), D.length < h.length) {\n        console.warn(\"Invalid selection: \" + h.filter((i) => !D.some((p) => p.id === i)));\n        return;\n      }\n    } else {\n      const i = e.getAnnotation(h);\n      if (!i) {\n        console.warn(\"Invalid selection: \" + h);\n        return;\n      }\n      D = [i];\n    }\n    const a = D.reduce((i, p) => {\n      const v = W(p, f, n);\n      return v === \"EDIT\" ? [...i, { id: p.id, editable: !0 }] : v === \"SELECT\" ? [...i, { id: p.id }] : i;\n    }, []);\n    s({ selected: a, event: C });\n  }, c = (h, C) => {\n    const D = Array.isArray(h) ? h : [h], a = D.map((i) => e.getAnnotation(i)).filter((i) => !!i);\n    s({\n      selected: a.map((i) => {\n        const p = C === void 0 ? W(i, f, n) === \"EDIT\" : C;\n        return { id: i.id, editable: p };\n      })\n    }), a.length !== D.length && console.warn(\"Invalid selection\", h);\n  }, E = (h) => {\n    if (w())\n      return !1;\n    const { selected: C } = A;\n    C.some(({ id: a }) => h.includes(a)) && s({ selected: C.filter(({ id: a }) => !h.includes(a)) });\n  }, T = (h) => {\n    f = h, c(A.selected.map(({ id: C }) => C));\n  };\n  return e.observe(\n    ({ changes: h }) => E((h.deleted || []).map((C) => C.id))\n  ), {\n    get event() {\n      return A ? A.event : null;\n    },\n    get selected() {\n      return A ? [...A.selected] : null;\n    },\n    get userSelectAction() {\n      return f;\n    },\n    clear: b,\n    isEmpty: w,\n    isSelected: m,\n    setSelected: c,\n    setUserSelectAction: T,\n    subscribe: o,\n    userSelect: U\n  };\n}, W = (e, t, n) => {\n  const o = n ? n.serialize(e) : e;\n  return typeof t == \"function\" ? t(o) : t || \"EDIT\";\n}, R = [];\nfor (let e = 0; e < 256; ++e)\n  R.push((e + 256).toString(16).slice(1));\nfunction F(e, t = 0) {\n  return (R[e[t + 0]] + R[e[t + 1]] + R[e[t + 2]] + R[e[t + 3]] + \"-\" + R[e[t + 4]] + R[e[t + 5]] + \"-\" + R[e[t + 6]] + R[e[t + 7]] + \"-\" + R[e[t + 8]] + R[e[t + 9]] + \"-\" + R[e[t + 10]] + R[e[t + 11]] + R[e[t + 12]] + R[e[t + 13]] + R[e[t + 14]] + R[e[t + 15]]).toLowerCase();\n}\nlet _;\nconst K = new Uint8Array(16);\nfunction ee() {\n  if (!_) {\n    if (typeof crypto > \"u\" || !crypto.getRandomValues)\n      throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n    _ = crypto.getRandomValues.bind(crypto);\n  }\n  return _(K);\n}\nconst te = typeof crypto < \"u\" && crypto.randomUUID && crypto.randomUUID.bind(crypto), q = { randomUUID: te };\nfunction G(e, t, n) {\n  if (q.randomUUID && !t && !e)\n    return q.randomUUID();\n  e = e || {};\n  const o = e.random || (e.rng || ee)();\n  return o[6] = o[6] & 15 | 64, o[8] = o[8] & 63 | 128, F(o);\n}\nconst Te = (e) => {\n  const { creator: t, updatedBy: n } = e.target, o = e.bodies.reduce((s, f) => [...s, f.creator, f.updatedBy].filter(Boolean), []);\n  return [\n    t,\n    n,\n    ...o\n  ].filter((s) => s);\n}, Y = (e) => {\n  const t = (n) => {\n    const o = { ...n };\n    return n.created && typeof n.created == \"string\" && (o.created = new Date(n.created)), n.updated && typeof n.updated == \"string\" && (o.updated = new Date(n.updated)), o;\n  };\n  return {\n    ...e,\n    bodies: (e.bodies || []).map(t),\n    target: t(e.target)\n  };\n}, De = (e, t, n, o) => ({\n  id: G(),\n  annotation: typeof e == \"string\" ? e : e.id,\n  created: n || /* @__PURE__ */ new Date(),\n  creator: o,\n  ...t\n}), ne = (e, t) => {\n  const n = new Set(e.bodies.map((o) => o.id));\n  return t.bodies.filter((o) => !n.has(o.id));\n}, oe = (e, t) => {\n  const n = new Set(t.bodies.map((o) => o.id));\n  return e.bodies.filter((o) => !n.has(o.id));\n}, se = (e, t) => t.bodies.map((n) => {\n  const o = e.bodies.find((s) => s.id === n.id);\n  return { newBody: n, oldBody: o && !k(o, n) ? o : void 0 };\n}).filter(({ oldBody: n }) => n).map(({ oldBody: n, newBody: o }) => ({ oldBody: n, newBody: o })), ie = (e, t) => !k(e.target, t.target), J = (e, t) => {\n  const n = ne(e, t), o = oe(e, t), s = se(e, t);\n  return {\n    oldValue: e,\n    newValue: t,\n    bodiesCreated: n.length > 0 ? n : void 0,\n    bodiesDeleted: o.length > 0 ? o : void 0,\n    bodiesUpdated: s.length > 0 ? s : void 0,\n    targetUpdated: ie(e, t) ? { oldTarget: e.target, newTarget: t.target } : void 0\n  };\n};\nvar de = /* @__PURE__ */ ((e) => (e.BODY_ONLY = \"BODY_ONLY\", e.TARGET_ONLY = \"TARGET_ONLY\", e))(de || {}), O = /* @__PURE__ */ ((e) => (e.LOCAL = \"LOCAL\", e.REMOTE = \"REMOTE\", e.SILENT = \"SILENT\", e))(O || {});\nconst re = (e, t) => {\n  var f, A;\n  const { changes: n, origin: o } = t;\n  if (!(e.options.origin ? e.options.origin === o : o !== \"SILENT\"))\n    return !1;\n  if (e.options.ignore) {\n    const { ignore: b } = e.options, w = (U) => U && U.length > 0;\n    if (!(w(n.created) || w(n.deleted))) {\n      const U = (f = n.updated) == null ? void 0 : f.some((E) => w(E.bodiesCreated) || w(E.bodiesDeleted) || w(E.bodiesUpdated)), c = (A = n.updated) == null ? void 0 : A.some((E) => E.targetUpdated);\n      if (b === \"BODY_ONLY\" && U && !c || b === \"TARGET_ONLY\" && c && !U)\n        return !1;\n    }\n  }\n  if (e.options.annotations) {\n    const b = /* @__PURE__ */ new Set([\n      ...(n.created || []).map((m) => m.id),\n      ...(n.deleted || []).map((m) => m.id),\n      ...(n.updated || []).map(({ oldValue: m }) => m.id)\n    ]);\n    return !!(Array.isArray(e.options.annotations) ? e.options.annotations : [e.options.annotations]).find((m) => b.has(m));\n  } else\n    return !0;\n}, ae = (e, t) => {\n  const n = new Set((e.created || []).map((c) => c.id)), o = new Set((e.updated || []).map(({ newValue: c }) => c.id)), s = new Set((t.created || []).map((c) => c.id)), f = new Set((t.deleted || []).map((c) => c.id)), A = new Set((t.updated || []).map(({ oldValue: c }) => c.id)), b = new Set((t.updated || []).filter(({ oldValue: c }) => n.has(c.id) || o.has(c.id)).map(({ oldValue: c }) => c.id)), w = [\n    ...(e.created || []).filter((c) => !f.has(c.id)).map((c) => A.has(c.id) ? t.updated.find(({ oldValue: E }) => E.id === c.id).newValue : c),\n    ...t.created || []\n  ], m = [\n    ...(e.deleted || []).filter((c) => !s.has(c.id)),\n    ...(t.deleted || []).filter((c) => !n.has(c.id))\n  ], U = [\n    ...(e.updated || []).filter(({ newValue: c }) => !f.has(c.id)).map((c) => {\n      const { oldValue: E, newValue: T } = c;\n      if (A.has(T.id)) {\n        const h = t.updated.find((C) => C.oldValue.id === T.id).newValue;\n        return J(E, h);\n      } else\n        return c;\n    }),\n    ...(t.updated || []).filter(({ oldValue: c }) => !b.has(c.id))\n  ];\n  return { created: w, deleted: m, updated: U };\n}, $ = (e) => {\n  const t = e.id === void 0 ? G() : e.id;\n  return {\n    ...e,\n    id: t,\n    bodies: e.bodies === void 0 ? [] : e.bodies.map((n) => ({\n      ...n,\n      annotation: t\n    })),\n    target: {\n      ...e.target,\n      annotation: t\n    }\n  };\n}, ce = (e) => e.id !== void 0, Oe = () => {\n  const e = /* @__PURE__ */ new Map(), t = /* @__PURE__ */ new Map(), n = [], o = (d, l = {}) => {\n    n.push({ onChange: d, options: l });\n  }, s = (d) => {\n    const l = n.findIndex((u) => u.onChange == d);\n    l > -1 && n.splice(l, 1);\n  }, f = (d, l) => {\n    const u = {\n      origin: d,\n      changes: {\n        created: l.created || [],\n        updated: l.updated || [],\n        deleted: l.deleted || []\n      },\n      state: [...e.values()]\n    };\n    n.forEach((g) => {\n      re(g, u) && g.onChange(u);\n    });\n  }, A = (d, l = O.LOCAL) => {\n    if (d.id && e.get(d.id))\n      throw Error(`Cannot add annotation ${d.id} - exists already`);\n    {\n      const g = $(d);\n      e.set(g.id, g), g.bodies.forEach((S) => t.set(S.id, g.id)), f(l, { created: [g] });\n    }\n  }, b = (d, l) => {\n    const u = $(typeof d == \"string\" ? l : d), g = typeof d == \"string\" ? d : d.id, S = g && e.get(g);\n    if (S) {\n      const y = J(S, u);\n      return g === u.id ? e.set(g, u) : (e.delete(g), e.set(u.id, u)), S.bodies.forEach((x) => t.delete(x.id)), u.bodies.forEach((x) => t.set(x.id, u.id)), y;\n    } else\n      console.warn(`Cannot update annotation ${g} - does not exist`);\n  }, w = (d, l = O.LOCAL, u = O.LOCAL) => {\n    const g = ce(l) ? u : l, S = b(d, l);\n    S && f(g, { updated: [S] });\n  }, m = (d, l = O.LOCAL) => {\n    const u = d.reduce((g, S) => {\n      const y = b(S);\n      return y ? [...g, y] : g;\n    }, []);\n    u.length > 0 && f(l, { updated: u });\n  }, U = (d, l = O.LOCAL) => {\n    const u = e.get(d.annotation);\n    if (u) {\n      const g = {\n        ...u,\n        bodies: [...u.bodies, d]\n      };\n      e.set(u.id, g), t.set(d.id, g.id), f(l, { updated: [{\n        oldValue: u,\n        newValue: g,\n        bodiesCreated: [d]\n      }] });\n    } else\n      console.warn(`Attempt to add body to missing annotation: ${d.annotation}`);\n  }, c = () => [...e.values()], E = (d = O.LOCAL) => {\n    const l = [...e.values()];\n    e.clear(), t.clear(), f(d, { deleted: l });\n  }, T = (d, l = !0, u = O.LOCAL) => {\n    const g = d.map($);\n    if (l) {\n      const S = [...e.values()];\n      e.clear(), t.clear(), g.forEach((y) => {\n        e.set(y.id, y), y.bodies.forEach((x) => t.set(x.id, y.id));\n      }), f(u, { created: g, deleted: S });\n    } else {\n      const S = d.reduce((y, x) => {\n        const H = x.id && e.get(x.id);\n        return H ? [...y, H] : y;\n      }, []);\n      if (S.length > 0)\n        throw Error(`Bulk insert would overwrite the following annotations: ${S.map((y) => y.id).join(\", \")}`);\n      g.forEach((y) => {\n        e.set(y.id, y), y.bodies.forEach((x) => t.set(x.id, y.id));\n      }), f(u, { created: g });\n    }\n  }, h = (d) => {\n    const l = typeof d == \"string\" ? d : d.id, u = e.get(l);\n    if (u)\n      return e.delete(l), u.bodies.forEach((g) => t.delete(g.id)), u;\n    console.warn(`Attempt to delete missing annotation: ${l}`);\n  }, C = (d, l = O.LOCAL) => {\n    const u = h(d);\n    u && f(l, { deleted: [u] });\n  }, D = (d, l = O.LOCAL) => {\n    const u = d.reduce((g, S) => {\n      const y = h(S);\n      return y ? [...g, y] : g;\n    }, []);\n    u.length > 0 && f(l, { deleted: u });\n  }, a = (d) => {\n    const l = e.get(d.annotation);\n    if (l) {\n      const u = l.bodies.find((g) => g.id === d.id);\n      if (u) {\n        t.delete(u.id);\n        const g = {\n          ...l,\n          bodies: l.bodies.filter((y) => y.id !== d.id)\n        };\n        return e.set(l.id, g), {\n          oldValue: l,\n          newValue: g,\n          bodiesDeleted: [u]\n        };\n      } else\n        console.warn(`Attempt to delete missing body ${d.id} from annotation ${d.annotation}`);\n    } else\n      console.warn(`Attempt to delete body from missing annotation ${d.annotation}`);\n  }, i = (d, l = O.LOCAL) => {\n    const u = a(d);\n    u && f(l, { updated: [u] });\n  }, p = (d, l = O.LOCAL) => {\n    const u = d.map((g) => a(g)).filter(Boolean);\n    u.length > 0 && f(l, { updated: u });\n  }, v = (d) => {\n    const l = e.get(d);\n    return l ? { ...l } : void 0;\n  }, r = (d) => {\n    const l = t.get(d);\n    if (l) {\n      const g = v(l).bodies.find((S) => S.id === d);\n      if (g)\n        return g;\n      console.error(`Store integrity error: body ${d} in index, but not in annotation`);\n    } else\n      console.warn(`Attempt to retrieve missing body: ${d}`);\n  }, L = (d, l) => {\n    if (d.annotation !== l.annotation)\n      throw \"Annotation integrity violation: annotation ID must be the same when updating bodies\";\n    const u = e.get(d.annotation);\n    if (u) {\n      const g = u.bodies.find((y) => y.id === d.id), S = {\n        ...u,\n        bodies: u.bodies.map((y) => y.id === g.id ? l : y)\n      };\n      return e.set(u.id, S), g.id !== l.id && (t.delete(g.id), t.set(l.id, S.id)), {\n        oldValue: u,\n        newValue: S,\n        bodiesUpdated: [{ oldBody: g, newBody: l }]\n      };\n    } else\n      console.warn(`Attempt to add body to missing annotation ${d.annotation}`);\n  }, B = (d, l, u = O.LOCAL) => {\n    const g = L(d, l);\n    g && f(u, { updated: [g] });\n  }, I = (d, l = O.LOCAL) => {\n    const u = d.map((g) => L({ id: g.id, annotation: g.annotation }, g)).filter(Boolean);\n    f(l, { updated: u });\n  }, P = (d) => {\n    const l = e.get(d.annotation);\n    if (l) {\n      const u = {\n        ...l,\n        target: {\n          ...l.target,\n          ...d\n        }\n      };\n      return e.set(l.id, u), {\n        oldValue: l,\n        newValue: u,\n        targetUpdated: {\n          oldTarget: l.target,\n          newTarget: d\n        }\n      };\n    } else\n      console.warn(`Attempt to update target on missing annotation: ${d.annotation}`);\n  };\n  return {\n    addAnnotation: A,\n    addBody: U,\n    all: c,\n    bulkAddAnnotation: T,\n    bulkDeleteAnnotation: D,\n    bulkDeleteBodies: p,\n    bulkUpdateAnnotation: m,\n    bulkUpdateBodies: I,\n    bulkUpdateTargets: (d, l = O.LOCAL) => {\n      const u = d.map((g) => P(g)).filter(Boolean);\n      u.length > 0 && f(l, { updated: u });\n    },\n    clear: E,\n    deleteAnnotation: C,\n    deleteBody: i,\n    getAnnotation: v,\n    getBody: r,\n    observe: o,\n    unobserve: s,\n    updateAnnotation: w,\n    updateBody: B,\n    updateTarget: (d, l = O.LOCAL) => {\n      const u = P(d);\n      u && f(l, { updated: [u] });\n    }\n  };\n}, Re = (e) => ({\n  ...e,\n  subscribe: (n) => {\n    const o = (s) => n(s.state);\n    return e.observe(o), n(e.all()), () => e.unobserve(o);\n  }\n});\nlet Q = () => ({\n  emit(e, ...t) {\n    for (let n = this.events[e] || [], o = 0, s = n.length; o < s; o++)\n      n[o](...t);\n  },\n  events: {},\n  on(e, t) {\n    var n;\n    return ((n = this.events)[e] || (n[e] = [])).push(t), () => {\n      var o;\n      this.events[e] = (o = this.events[e]) == null ? void 0 : o.filter((s) => t !== s);\n    };\n  }\n});\nconst le = 250, Be = (e, t) => {\n  const n = Q(), o = (t == null ? void 0 : t.changes) || [];\n  let s = t ? t.pointer : -1, f = !1, A = 0;\n  const b = (r) => {\n    if (!f) {\n      const { changes: L } = r, B = performance.now();\n      if (B - A > le)\n        o.splice(s + 1), o.push(L), s = o.length - 1;\n      else {\n        const I = o.length - 1;\n        o[I] = ae(o[I], L);\n      }\n      A = B;\n    }\n    f = !1;\n  };\n  e.observe(b, { origin: O.LOCAL });\n  const w = (r) => r && r.length > 0 && e.bulkDeleteAnnotation(r), m = (r) => r && r.length > 0 && e.bulkAddAnnotation(r, !1), U = (r) => r && r.length > 0 && e.bulkUpdateAnnotation(r.map(({ oldValue: L }) => L)), c = (r) => r && r.length > 0 && e.bulkUpdateAnnotation(r.map(({ newValue: L }) => L)), E = (r) => r && r.length > 0 && e.bulkAddAnnotation(r, !1), T = (r) => r && r.length > 0 && e.bulkDeleteAnnotation(r);\n  return {\n    canRedo: () => o.length - 1 > s,\n    canUndo: () => s > -1,\n    destroy: () => e.unobserve(b),\n    getHistory: () => ({ changes: [...o], pointer: s }),\n    on: (r, L) => n.on(r, L),\n    redo: () => {\n      if (o.length - 1 > s) {\n        f = !0;\n        const { created: r, updated: L, deleted: B } = o[s + 1];\n        m(r), c(L), T(B), n.emit(\"redo\", o[s + 1]), s += 1;\n      }\n    },\n    undo: () => {\n      if (s > -1) {\n        f = !0;\n        const { created: r, updated: L, deleted: B } = o[s];\n        w(r), U(L), E(B), n.emit(\"undo\", o[s]), s -= 1;\n      }\n    }\n  };\n}, xe = () => {\n  const { subscribe: e, set: t } = j([]);\n  return {\n    subscribe: e,\n    set: t\n  };\n}, Ie = (e, t, n, o) => {\n  const { hover: s, selection: f, store: A, viewport: b } = e, w = /* @__PURE__ */ new Map();\n  let m = [], U, c;\n  const E = (a, i) => {\n    w.has(a) ? w.get(a).push(i) : w.set(a, [i]);\n  }, T = (a, i) => {\n    const p = w.get(a);\n    if (p) {\n      const v = p.indexOf(i);\n      v !== -1 && p.splice(v, 1);\n    }\n  }, h = (a, i, p) => {\n    w.has(a) && setTimeout(() => {\n      w.get(a).forEach((v) => {\n        if (n) {\n          const r = Array.isArray(i) ? i.map((B) => n.serialize(B)) : n.serialize(i), L = p ? p instanceof PointerEvent ? p : n.serialize(p) : void 0;\n          v(r, L);\n        } else\n          v(i, p);\n      });\n    }, 1);\n  }, C = () => {\n    const { selected: a } = f, i = (a || []).map(({ id: p }) => A.getAnnotation(p));\n    i.forEach((p) => {\n      const v = m.find((r) => r.id === p.id);\n      (!v || !k(v, p)) && h(\"updateAnnotation\", p, v);\n    }), m = m.map((p) => {\n      const v = i.find(({ id: r }) => r === p.id);\n      return v || p;\n    });\n  };\n  f.subscribe(({ selected: a }) => {\n    if (!(m.length === 0 && a.length === 0)) {\n      if (m.length === 0 && a.length > 0)\n        m = a.map(({ id: i }) => A.getAnnotation(i));\n      else if (m.length > 0 && a.length === 0)\n        m.forEach((i) => {\n          const p = A.getAnnotation(i.id);\n          p && !k(p, i) && h(\"updateAnnotation\", p, i);\n        }), m = [];\n      else {\n        const i = new Set(m.map((r) => r.id)), p = new Set(a.map(({ id: r }) => r));\n        m.filter((r) => !p.has(r.id)).forEach((r) => {\n          const L = A.getAnnotation(r.id);\n          L && !k(L, r) && h(\"updateAnnotation\", L, r);\n        }), m = [\n          // Remove annotations that were deselected\n          ...m.filter((r) => p.has(r.id)),\n          // Add editable annotations that were selected\n          ...a.filter(({ id: r }) => !i.has(r)).map(({ id: r }) => A.getAnnotation(r))\n        ];\n      }\n      h(\"selectionChanged\", m);\n    }\n  }), s.subscribe((a) => {\n    !U && a ? h(\"mouseEnterAnnotation\", A.getAnnotation(a)) : U && !a ? h(\"mouseLeaveAnnotation\", A.getAnnotation(U)) : U && a && (h(\"mouseLeaveAnnotation\", A.getAnnotation(U)), h(\"mouseEnterAnnotation\", A.getAnnotation(a))), U = a;\n  }), b == null || b.subscribe((a) => h(\"viewportIntersect\", a.map((i) => A.getAnnotation(i)))), A.observe((a) => {\n    o && (c && clearTimeout(c), c = setTimeout(C, 1e3));\n    const { created: i, deleted: p } = a.changes;\n    (i || []).forEach((r) => h(\"createAnnotation\", r)), (p || []).forEach((r) => h(\"deleteAnnotation\", r)), (a.changes.updated || []).filter((r) => [\n      ...r.bodiesCreated || [],\n      ...r.bodiesDeleted || [],\n      ...r.bodiesUpdated || []\n    ].length > 0).forEach(({ oldValue: r, newValue: L }) => {\n      const B = m.find((I) => I.id === r.id) || r;\n      m = m.map((I) => I.id === r.id ? L : I), h(\"updateAnnotation\", L, B);\n    });\n  }, { origin: O.LOCAL }), A.observe((a) => {\n    if (m) {\n      const i = new Set(m.map((v) => v.id)), p = (a.changes.updated || []).filter(({ newValue: v }) => i.has(v.id)).map(({ newValue: v }) => v);\n      p.length > 0 && (m = m.map((v) => {\n        const r = p.find((L) => L.id === v.id);\n        return r || v;\n      }));\n    }\n  }, { origin: O.REMOTE });\n  const D = (a) => (i) => {\n    const { updated: p } = i;\n    a ? (p || []).forEach((v) => h(\"updateAnnotation\", v.oldValue, v.newValue)) : (p || []).forEach((v) => h(\"updateAnnotation\", v.newValue, v.oldValue));\n  };\n  return t.on(\"undo\", D(!0)), t.on(\"redo\", D(!1)), { on: E, off: T, emit: h };\n}, ke = (e) => (t) => t.map((n) => e.serialize(n)), ue = (e) => (t) => t.reduce((n, o) => {\n  const { parsed: s, error: f } = e.parse(o);\n  return f ? {\n    parsed: n.parsed,\n    failed: [...n.failed, o]\n  } : s ? {\n    parsed: [...n.parsed, s],\n    failed: n.failed\n  } : {\n    ...n\n  };\n}, { parsed: [], failed: [] }), Ne = (e, t, n) => {\n  const { store: o, selection: s } = e, f = (a) => {\n    if (n) {\n      const { parsed: i, error: p } = n.parse(a);\n      i ? o.addAnnotation(i, O.REMOTE) : console.error(p);\n    } else\n      o.addAnnotation(Y(a), O.REMOTE);\n  }, A = () => s.clear(), b = () => o.clear(), w = (a) => {\n    const i = o.getAnnotation(a);\n    return n && i ? n.serialize(i) : i;\n  }, m = () => n ? o.all().map(n.serialize) : o.all(), U = () => {\n    var p;\n    const i = (((p = s.selected) == null ? void 0 : p.map((v) => v.id)) || []).map((v) => o.getAnnotation(v)).filter(Boolean);\n    return n ? i.map(n.serialize) : i;\n  }, c = (a, i = !0) => fetch(a).then((p) => p.json()).then((p) => (T(p, i), p)), E = (a) => {\n    if (typeof a == \"string\") {\n      const i = o.getAnnotation(a);\n      if (o.deleteAnnotation(a), i)\n        return n ? n.serialize(i) : i;\n    } else {\n      const i = n ? n.parse(a).parsed : a;\n      if (i)\n        return o.deleteAnnotation(i), a;\n    }\n  }, T = (a, i = !0) => {\n    if (n) {\n      const p = n.parseAll || ue(n), { parsed: v, failed: r } = p(a);\n      r.length > 0 && console.warn(`Discarded ${r.length} invalid annotations`, r), o.bulkAddAnnotation(v, i, O.REMOTE);\n    } else\n      o.bulkAddAnnotation(a.map(Y), i, O.REMOTE);\n  }, h = (a, i) => {\n    a ? s.setSelected(a, i) : s.clear();\n  }, C = (a) => {\n    s.clear(), s.setUserSelectAction(a);\n  }, D = (a) => {\n    if (n) {\n      const i = n.parse(a).parsed, p = n.serialize(o.getAnnotation(i.id));\n      return o.updateAnnotation(i), p;\n    } else {\n      const i = o.getAnnotation(a.id);\n      return o.updateAnnotation(Y(a)), i;\n    }\n  };\n  return {\n    addAnnotation: f,\n    cancelSelected: A,\n    canRedo: t.canRedo,\n    canUndo: t.canUndo,\n    clearAnnotations: b,\n    getAnnotationById: w,\n    getAnnotations: m,\n    getHistory: t.getHistory,\n    getSelected: U,\n    loadAnnotations: c,\n    redo: t.redo,\n    removeAnnotation: E,\n    setAnnotations: T,\n    setSelected: h,\n    setUserSelectAction: C,\n    undo: t.undo,\n    updateAnnotation: D\n  };\n}, ze = (e, t, n) => typeof t == \"function\" ? t(e, n) : t, $e = (e, t) => typeof e != \"function\" && typeof t != \"function\" ? {\n  ...e || {},\n  ...t || {}\n} : (n, o) => {\n  const s = typeof e == \"function\" ? e(n, o) : e, f = typeof t == \"function\" ? t(n, o) : t;\n  return {\n    ...s || {},\n    ...f || {}\n  };\n}, fe = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";\nlet pe = (e) => crypto.getRandomValues(new Uint8Array(e)), ge = (e, t, n) => {\n  let o = (2 << Math.log2(e.length - 1)) - 1, s = -~(1.6 * o * t / e.length);\n  return (f = t) => {\n    let A = \"\";\n    for (; ; ) {\n      let b = n(s), w = s | 0;\n      for (; w--; )\n        if (A += e[b[w] & o] || \"\", A.length >= f) return A;\n    }\n  };\n}, he = (e, t = 21) => ge(e, t | 0, pe), me = (e = 21) => {\n  let t = \"\", n = crypto.getRandomValues(new Uint8Array(e |= 0));\n  for (; e--; )\n    t += fe[n[e] & 63];\n  return t;\n};\nconst Ve = () => ({ isGuest: !0, id: he(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_\", 20)() }), Ae = (e) => {\n  const t = JSON.stringify(e);\n  let n = 0;\n  for (let o = 0, s = t.length; o < s; o++) {\n    let f = t.charCodeAt(o);\n    n = (n << 5) - n + f, n |= 0;\n  }\n  return `${n}`;\n}, be = (e) => e ? typeof e == \"object\" ? { ...e } : e : void 0, _e = (e, t) => (Array.isArray(e) ? e : [e]).map((n) => {\n  const { id: o, type: s, purpose: f, value: A, created: b, modified: w, creator: m, ...U } = n;\n  return {\n    id: o || `temp-${Ae(n)}`,\n    annotation: t,\n    type: s,\n    purpose: f,\n    value: A,\n    creator: be(m),\n    created: b ? new Date(b) : void 0,\n    updated: w ? new Date(w) : void 0,\n    ...U\n  };\n}), Ye = (e) => e.map((t) => {\n  var b;\n  const { annotation: n, created: o, updated: s, ...f } = t, A = {\n    ...f,\n    created: o == null ? void 0 : o.toISOString(),\n    modified: s == null ? void 0 : s.toISOString()\n  };\n  return (b = A.id) != null && b.startsWith(\"temp-\") && delete A.id, A;\n}), ve = [\n  \"#ff7c00\",\n  // orange\n  \"#1ac938\",\n  // green\n  \"#e8000b\",\n  // red\n  \"#8b2be2\",\n  // purple\n  \"#9f4800\",\n  // brown\n  \"#f14cc1\",\n  // pink\n  \"#ffc400\",\n  // khaki\n  \"#00d7ff\",\n  // cyan\n  \"#023eff\"\n  // blue\n], Ee = () => {\n  const e = [...ve];\n  return { assignRandomColor: () => {\n    const o = Math.floor(Math.random() * e.length), s = e[o];\n    return e.splice(o, 1), s;\n  }, releaseColor: (o) => e.push(o) };\n}, we = () => {\n  const e = Ee();\n  return { addUser: (o, s) => {\n    const f = e.assignRandomColor();\n    return {\n      label: s.name || s.id,\n      avatar: s.avatar,\n      color: f\n    };\n  }, removeUser: (o) => e.releaseColor(o.appearance.color) };\n}, Ce = (e, t) => e.every((n) => e.includes(n)) && t.every((n) => e.includes(n)), je = me(), Pe = (e = we()) => {\n  const t = Q(), n = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), s = (c, E) => {\n    if (n.has(c)) {\n      console.warn(\"Attempt to add user that is already present\", c, E);\n      return;\n    }\n    const T = e.addUser(c, E);\n    n.set(c, {\n      ...E,\n      presenceKey: c,\n      appearance: T\n    });\n  }, f = (c) => {\n    const E = n.get(c);\n    if (!E) {\n      console.warn(\"Attempt to remove user that is not present\", c);\n      return;\n    }\n    e.removeUser(E), n.delete(c);\n  }, A = (c) => {\n    const E = new Set(c.map((C) => C.presenceKey)), T = c.filter(({ presenceKey: C }) => !n.has(C)), h = Array.from(n.values()).filter((C) => !E.has(C.presenceKey));\n    T.forEach(({ presenceKey: C, user: D }) => s(C, D)), h.forEach((C) => {\n      const { presenceKey: D } = C;\n      o.has(D) && t.emit(\"selectionChange\", C, null), f(D);\n    }), (T.length > 0 || h.length > 0) && t.emit(\"presence\", m());\n  }, b = (c, E) => {\n    const T = n.get(c);\n    if (!T) {\n      console.warn(\"Activity notification from user that is not present\");\n      return;\n    }\n    const h = o.get(c);\n    (!h || !Ce(h, E)) && (o.set(c, E), t.emit(\"selectionChange\", T, E));\n  }, w = (c, E) => {\n    const T = n.get(c);\n    if (!T) {\n      console.warn(\"Selection change for user that is not present\", c);\n      return;\n    }\n    E ? o.set(c, E) : o.delete(c), t.emit(\"selectionChange\", T, E);\n  }, m = () => [...Array.from(n.values())];\n  return {\n    getPresentUsers: m,\n    notifyActivity: b,\n    on: (c, E) => t.on(c, E),\n    syncUsers: A,\n    updateSelection: w\n  };\n};\nexport {\n  de as Ignore,\n  O as Origin,\n  je as PRESENCE_KEY,\n  Z as UserSelectAction,\n  $e as chainStyles,\n  ze as computeStyle,\n  Ve as createAnonymousGuest,\n  Ne as createBaseAnnotator,\n  De as createBody,\n  we as createDefaultAppearanceProvider,\n  Ue as createHoverState,\n  Ie as createLifecycleObserver,\n  Pe as createPresenceState,\n  Se as createSelectionState,\n  Oe as createStore,\n  Be as createUndoStack,\n  xe as createViewportState,\n  Ee as defaultColorProvider,\n  J as diffAnnotations,\n  Te as getContributors,\n  ae as mergeChanges,\n  W as onUserSelect,\n  ue as parseAll,\n  _e as parseW3CBodies,\n  be as parseW3CUser,\n  Y as reviveDates,\n  ke as serializeAll,\n  Ye as serializeW3CBodies,\n  re as shouldNotify,\n  Re as toSvelteStore\n};\n//# sourceMappingURL=annotorious-core.es.js.map\n","import { v4 as uuidv4 } from 'uuid';\nimport { parseW3CUser, parseW3CBodies, serializeW3CBodies } from '@annotorious/core';\nimport type { FormatAdapter, ParseResult, W3CAnnotation } from '@annotorious/core';\nimport { ShapeType } from '../core';\nimport type { ImageAnnotation, RectangleGeometry } from '../core';\nimport type {FragmentSelector } from './fragment';\nimport { parseFragmentSelector, serializeFragmentSelector } from './fragment';\nimport type { SVGSelector } from './svg';\nimport { parseSVGSelector, serializeSVGSelector } from './svg';\nimport type { W3CImageAnnotation } from './W3CImageAnnotation';\n\nexport type W3CImageFormatAdapter = FormatAdapter<ImageAnnotation, W3CImageAnnotation>;\n\nexport interface W3CImageFormatAdapterOpts {\n\n  strict: boolean;\n\n  invertY: boolean;\n\n}\n\nexport const W3CImageFormat = (\n  source: string,\n  opts: W3CImageFormatAdapterOpts = { strict: true, invertY: false }\n): W3CImageFormatAdapter => {\n\n  const parse = (serialized: W3CAnnotation) =>\n    parseW3CImageAnnotation(serialized, opts);\n\n  const serialize = (annotation: ImageAnnotation) =>\n    serializeW3CImageAnnotation(annotation, source, opts);\n\n  return { parse, serialize }\n}\n\nexport const parseW3CImageAnnotation = (\n  annotation: W3CAnnotation, \n  opts: W3CImageFormatAdapterOpts = { strict: true, invertY: false }\n): ParseResult<ImageAnnotation> => {\n  const annotationId = annotation.id || uuidv4();\n\n  const { \n    creator,\n    created,\n    modified,\n    body, \n    ...rest \n  } = annotation;\n\n  const bodies = parseW3CBodies(body || [], annotationId);\n\n  const w3cTarget = Array.isArray(annotation.target) \n    ? annotation.target[0] : annotation.target;\n\n  const w3cSelector = Array.isArray(w3cTarget.selector) \n    ? w3cTarget.selector[0] : w3cTarget.selector;\n\n  const selector = \n    w3cSelector?.type === 'FragmentSelector' ?\n      parseFragmentSelector(w3cSelector as FragmentSelector, opts.invertY) :\n    w3cSelector?.type === 'SvgSelector' ?\n      parseSVGSelector(w3cSelector as SVGSelector) : undefined;\n\n  return (selector || !opts.strict) ? { \n    parsed: {\n      ...rest,\n      id: annotationId,\n      bodies,\n      target: {\n        created: created ? new Date(created) : undefined,\n        creator: parseW3CUser(creator),\n        updated: modified ? new Date(modified) : undefined,\n        ...(Array.isArray(rest.target) ? rest.target[0] : rest.target),\n        annotation: annotationId,\n        selector: selector || w3cSelector\n      }\n    }\n  } : {\n    error: Error(`Invalid selector: ${JSON.stringify(w3cSelector)}`)\n  };\n}\n\nexport const serializeW3CImageAnnotation = (\n  annotation: ImageAnnotation, \n  source: string,\n  opts: W3CImageFormatAdapterOpts = { strict: true, invertY: false }\n): W3CImageAnnotation => {\n  const { \n    selector, \n    creator, \n    created, \n    updated,\n    updatedBy, // Excluded from serialization\n    ...rest \n  } = annotation.target;\n\n  let w3cSelector: FragmentSelector | SVGSelector | unknown;\n\n  try {\n    w3cSelector = selector.type == ShapeType.RECTANGLE ?\n      serializeFragmentSelector(selector.geometry as RectangleGeometry) :\n      serializeSVGSelector(selector);\n  } catch (error) {\n    if (opts.strict)\n      throw error;\n    else \n     w3cSelector = selector;\n  }\n\n  const serialized = {\n    ...annotation,\n    '@context': 'http://www.w3.org/ns/anno.jsonld',\n    id: annotation.id,\n    type: 'Annotation',\n    body: serializeW3CBodies(annotation.bodies),\n    created: created?.toISOString(),\n    creator,\n    modified: updated?.toISOString(),\n    target: {\n      ...rest,\n      source,\n      selector: w3cSelector\n    }\n  } as W3CImageAnnotation;\n\n  // Remove core properties that should not appear in the W3C annotation\n  delete serialized.bodies;\n  \n  if ('annotation' in serialized.target)\n    delete serialized.target.annotation;\n\n  return serialized;\n}\n","<script lang=\"ts\">\n  import { boundsFromPoints } from '../../../model';\n  import type { Polygon, PolygonGeometry, Shape } from '../../../model';\n  import type { Transform } from '../../Transform';\n  import { Editor, Handle } from '..';\n\n  /** Props */\n  export let shape: Polygon;\n  export let computedStyle: string | undefined;\n  export let transform: Transform;\n  export let viewportScale: number = 1;\n\n  $: geom = shape.geometry;\n\n  const editor = (polygon: Shape, handle: string, delta: [number, number]) => {\n    let points: [number, number][];\n\n    const geom = (polygon.geometry) as PolygonGeometry;\n\n    if (handle === 'SHAPE') {\n      points = geom.points.map(([x, y]) => [x + delta[0], y + delta[1]]);\n    } else {\n      points = geom.points.map(([x, y], idx) =>\n        handle === `HANDLE-${idx}` ? [x + delta[0], y + delta[1]] : [x, y]\n      );\n    }\n\n    const bounds = boundsFromPoints(points);\n\n    return {\n      ...polygon,\n      geometry: { points, bounds }\n    }\n  }\n</script>\n\n<Editor\n  shape={shape}\n  transform={transform}\n  editor={editor}\n  on:change \n  on:grab\n  on:release\n  let:grab={grab}>\n\n  <polygon\n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    on:pointerdown={grab('SHAPE')}\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\n\n  <polygon\n    class=\"a9s-inner a9s-shape-handle\"\n    style={computedStyle}\n    on:pointerdown={grab('SHAPE')}\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\n\n  {#each geom.points as point, idx}\n    <Handle \n      on:pointerdown={grab(`HANDLE-${idx}`)}\n      x={point[0]} y={point[1]} \n      scale={viewportScale} />\n  {/each}\n</Editor>","export const distance = (a: [number, number], b: [number, number]): number => {\n  const dx = Math.abs(b[0] - a[0]);\n  const dy = Math.abs(b[1] - a[1]);\n\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n}","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { writable } from 'svelte/store';\n\nconst setSize = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGElement) => {\n  const { naturalWidth, naturalHeight } = (image as HTMLImageElement);\n\n  if (!naturalWidth && !naturalHeight) {\n    // Might be because a) the image has not loaded yet, or b) because it's not \n    // an image element (but maybe a CANVAS etc.)! Allow for both possibilities.\n    const { width, height } = image;\n\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n\n    image.addEventListener('load', event => {\n      const img = event.target as HTMLImageElement;\n      svg.setAttribute('viewBox', `0 0 ${img.naturalWidth} ${img.naturalHeight}`);\n    });\n  } else {\n    svg.setAttribute('viewBox', `0 0 ${naturalWidth} ${naturalHeight}`);\n  }\n\n}\n\nexport const enableResponsive = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGSVGElement) => {\n\n  setSize(image, svg);\n\n  const { subscribe, set } = writable(1);\n\n  let resizeObserver: ResizeObserver;\n\n  if (window.ResizeObserver) {\n    resizeObserver = new ResizeObserver(() => {\n      const svgBounds = svg.getBoundingClientRect();\n\n      const { width, height } = svg.viewBox.baseVal;\n  \n      const scale = Math.max(\n        svgBounds.width / width,\n        svgBounds.height / height\n      );\n  \n      set(scale);\n    });\n  \n    resizeObserver.observe(svg.parentElement!);\n  }\n\n  const destroy = () => {\n    if (resizeObserver)\n      resizeObserver.disconnect();\n  }\n\n  return { destroy, subscribe };\n\n}\n\n","export const isTouch = (() => {\n  if (typeof window === 'undefined' || typeof navigator === 'undefined')\n    return false;\n  \n  return 'ontouchstart' in window || \n         navigator.maxTouchPoints > 0 || \n         // @ts-ignore\n         navigator.msMaxTouchPoints > 0;\n})();\n","<script lang=\"ts\">\n  import { isTouch } from '../utils';\n\n  /** props **/\n  export let x: number;\n  export let y: number;\n  export let scale: number;\n  export let radius: number = 30;\n\n  let touched = false;\n\n  const onPointerDown = (event: PointerEvent) => {\n    if (event.pointerType === 'touch')\n      touched = true;\n  }\n\n  const onPointerUp = () =>\n    touched = false;\n\n  $: handleSize = 10 / scale;\n</script>\n\n{#if isTouch}\n  <g class=\"a9s-touch-handle\">\n    <circle \n      cx={x} \n      cy={y} \n      r={radius / scale}\n      class=\"a9s-touch-halo\"\n      class:touched={touched}\n      on:pointerdown\n      on:pointerdown={onPointerDown} \n      on:pointerup={onPointerUp} />\n\n    <rect \n      class={`a9s-handle ${$$props.class || ''}`.trim()}\n      x={x - handleSize / 2} \n      y={y - handleSize / 2} \n      width={handleSize} \n      height={handleSize}\n      on:pointerdown\n      on:pointerdown={onPointerDown} \n      on:pointerup={onPointerUp}  />\n  </g>\n{:else}\n  <rect \n    class={`a9s-handle ${$$props.class || ''}`.trim()}\n    x={x - handleSize / 2} \n    y={y - handleSize / 2} \n    width={handleSize} \n    height={handleSize} \n    on:pointerdown />\n{/if}\n\n<style>\n  .a9s-touch-halo {\n    fill: transparent;\n    stroke-width: 0;\n  }\n\n  .a9s-touch-halo.touched {\n    fill: rgba(255, 255, 255, 0.25);\n  }\n\n\n</style>\n","<script lang=\"ts\">\n  import Handle from '../Handle.svelte';\n  import type { Rectangle, Shape } from '../../../model';\n  import type { Transform } from '../../Transform';\n  import { Editor } from '..';\n\n  /** Props */\n  export let shape: Rectangle;\n  export let computedStyle: string | undefined;\n  export let transform: Transform;\n  export let viewportScale: number = 1;\n\n  $: geom = shape.geometry;\n\n  const editor = (rectangle: Shape, handle: string, delta: [number, number]) => {\n    const initialBounds = rectangle.geometry.bounds;\n\n    let [x0, y0] = [initialBounds.minX, initialBounds.minY];\n    let [x1, y1] = [initialBounds.maxX, initialBounds.maxY];\n\n    const [dx, dy] = delta;\n\n    if (handle === 'SHAPE') {\n      x0 += dx;\n      x1 += dx;\n      y0 += dy;\n      y1 += dy;\n    } else {\n      switch (handle) {\n        case 'TOP':\n        case 'TOP_LEFT':\n        case 'TOP_RIGHT': {\n          y0 += dy;\n          break;\n        }\n\n        case 'BOTTOM':\n        case 'BOTTOM_LEFT':\n        case 'BOTTOM_RIGHT': {\n          y1 += dy;\n          break;\n        }\n      }\n\n      switch (handle) {\n        case 'LEFT':\n        case 'TOP_LEFT':\n        case 'BOTTOM_LEFT': {\n          x0 += dx;\n          break;\n        }\n\n        case 'RIGHT':\n        case 'TOP_RIGHT':\n        case 'BOTTOM_RIGHT': {\n          x1 += dx;\n          break;\n        }\n      }\n    }\n\n    const x = Math.min(x0, x1);\n    const y = Math.min(y0, y1);\n    const w = Math.abs(x1 - x0);\n    const h = Math.abs(y1 - y0);\n\n    return {\n      ...rectangle,\n      geometry: {\n        x, y, w, h,\n        bounds: {\n          minX: x,\n          minY: y,\n          maxX: x + w,\n          maxY: y + h\n        }\n      }\n    };\n  }\n</script>\n\n<Editor\n  shape={shape}\n  transform={transform}\n  editor={editor}\n  on:grab\n  on:change \n  on:release\n  let:grab={grab}>\n\n  <rect \n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    on:pointerdown={grab('SHAPE')}\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\n\n  <rect \n    class=\"a9s-inner a9s-shape-handle\"\n    style={computedStyle}\n    on:pointerdown={grab('SHAPE')}\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-top\" \n    on:pointerdown={grab('TOP')}\n    x={geom.x} y={geom.y} height={1} width={geom.w} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-right\"\n    on:pointerdown={grab('RIGHT')}\n    x={geom.x + geom.w} y={geom.y} height={geom.h} width={1}/>\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-bottom\" \n    on:pointerdown={grab('BOTTOM')}\n    x={geom.x} y={geom.y + geom.h} height={1} width={geom.w} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-left\" \n    on:pointerdown={grab('LEFT')}\n    x={geom.x} y={geom.y} height={geom.h} width={1} />\n\n  <Handle\n    class=\"a9s-corner-handle-topleft\"\n    on:pointerdown={grab('TOP_LEFT')}\n    x={geom.x} y={geom.y}\n    scale={viewportScale} /> \n\n  <Handle\n    class=\"a9s-corner-handle-topright\"\n    on:pointerdown={grab('TOP_RIGHT')}\n    x={geom.x + geom.w} y={geom.y} \n    scale={viewportScale} />\n  \n  <Handle \n    class=\"a9s-corner-handle-bottomright\"\n    on:pointerdown={grab('BOTTOM_RIGHT')}\n    x={geom.x + geom.w} y={geom.y + geom.h} \n    scale={viewportScale} />\n    \n  <Handle \n    class=\"a9s-corner-handle-bottomleft\"\n    on:pointerdown={grab('BOTTOM_LEFT')}\n    x={geom.x} y={geom.y + geom.h} \n    scale={viewportScale} />\n</Editor>","import { ShapeType, type Shape } from '../../model';\nimport type { SvelteComponent } from 'svelte';\nimport { PolygonEditor } from './polygon';\nimport { RectangleEditor } from './rectangle';\n\nconst REGISTERED = new Map<ShapeType, typeof SvelteComponent>([\n  [ShapeType.RECTANGLE, RectangleEditor as typeof SvelteComponent],\n  [ShapeType.POLYGON, PolygonEditor as typeof SvelteComponent]\n]);\n\nexport const getEditor = (shape: Shape) => REGISTERED.get(shape.type);\n\nexport const registerEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\n  REGISTERED.set(shapeType, editor);","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import type { Shape } from '../../model';\n  import type { Transform } from '../Transform';\n\n  const dispatch = createEventDispatcher<{ grab: PointerEvent, release: PointerEvent, change: Shape }>();\n\n  /** Props */\n  export let shape: Shape;\n  export let editor: (shape: Shape, handle: string, delta: [number, number]) => Shape;\n  export let transform: Transform;\n\n  let grabbedHandle: string | undefined;\n\n  let origin: [number, number];\n\n  let initialShape: Shape | undefined;\n\n  const onGrab = (handle: string) => (evt: PointerEvent) => {\n    grabbedHandle = handle;\n    origin = transform.elementToImage(evt.offsetX, evt.offsetY);\n    initialShape = shape;\n\n    const target = evt.target as Element;\n    target.setPointerCapture(evt.pointerId);\n\n    dispatch('grab', evt);\n  }\n\n  const onPointerMove = (evt: PointerEvent) => {\n    if (grabbedHandle) {\n      const [x, y] = transform.elementToImage(evt.offsetX, evt.offsetY);\n\n      const delta: [number, number] = [x - origin[0], y - origin[1]];\n\n      shape = editor(initialShape!, grabbedHandle, delta);\n      \n      dispatch('change', shape);\n    }\n  }\n\n  const onRelease = (evt: PointerEvent) => {    \n    const target = evt.target as Element;\n    target.releasePointerCapture(evt.pointerId);\n\n    grabbedHandle = undefined;\n\n    initialShape = shape;\n    \n    dispatch('release', evt);\n  }\n</script>\n\n<g\n  class=\"a9s-annotation selected\"\n  on:pointerup={onRelease}\n  on:pointermove={onPointerMove}>\n\n  <slot grab={onGrab} />\n</g>","import type { DrawingStyleExpression } from '@annotorious/core';\nimport type { ImageAnnotation } from '../../model';\n\nexport const computeStyle = (\n  annotation: ImageAnnotation,\n  style?: DrawingStyleExpression<ImageAnnotation>\n) => {\n  const computed = typeof style === 'function' ? style(annotation) : style;\n\n  if (computed) {\n    const { fill, fillOpacity, stroke, strokeWidth, strokeOpacity } = computed;\n\n    let css = '';\n\n    if (fill) {\n      css += `fill:${fill};`;\n      css += `fill-opacity:${fillOpacity || '0.25'};`;\n    }\n\n    if (stroke) {\n      css += `stroke:${stroke};`;\n      css += `stroke-width:${strokeWidth || '1'};`;\n      css += `stroke-opacity:${strokeOpacity || '1'};`;\n    }\n\n    return css;\n  }\n};\n","<script lang=\"ts\">\n  import type { DrawingStyleExpression } from '@annotorious/core';\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\n  import type { ImageAnnotation, Shape } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  import type { Transform } from '../Transform';\n\n  const dispatch = createEventDispatcher<{ grab: PointerEvent, release: PointerEvent, change: Shape }>();\n\n  /** Props */\n  export let annotation: ImageAnnotation;\n  export let editor: typeof SvelteComponent;\n  export let style: DrawingStyleExpression<ImageAnnotation> | undefined;\n  export let target: SVGGElement;\n  export let transform: Transform;\n  export let viewportScale: number;\n\n  let editorComponent: SvelteComponent;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  $: if (annotation) editorComponent?.$set({ shape: annotation.target.selector });\n  $: if (editorComponent) editorComponent.$set({ transform });\n  $: if (editorComponent) editorComponent.$set({ viewportScale });\n  $: if (editorComponent && computedStyle) editorComponent.$set({ computedStyle });\n\n  onMount(() => {    \n    editorComponent = new editor({\n      target,\n      props: { shape: annotation.target.selector, computedStyle, transform, viewportScale }\n    });\n\n    editorComponent.$on('change', event => {\n      editorComponent.$$set({ shape: event.detail });\n      dispatch('change', event.detail);\n    });\n\n    editorComponent.$on('grab', event => dispatch('grab', event.detail));\n    editorComponent.$on('release', event => dispatch('release', event.detail));\n\n    return () => {\n      editorComponent.$destroy();\n    }\n  });\n</script>","<script lang=\"ts\">\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\n  import type { Transform } from '../Transform';\n  import type { Shape } from 'src/model';\n  import type { DrawingMode } from 'src/AnnotoriousOpts';\n\n  const dispatch = createEventDispatcher<{ create: Shape }>();\n\n  /** Props **/\n  export let drawingMode: DrawingMode;\n  export let target: SVGGElement;\n  export let tool: typeof SvelteComponent;\n  export let transform: Transform;\n  export let viewportScale: number;\n\n  let toolComponent: SvelteComponent;\n\n  $: if (toolComponent) toolComponent.$set({ transform });\n  $: if (toolComponent) toolComponent.$set({ viewportScale });\n\n  onMount(() => {\n    const svg = target.closest('svg');\n\n    const cleanup: Function[] = [];\n\n    const addEventListener = (name: keyof SVGSVGElementEventMap, handler: EventListenerOrEventListenerObject, capture?: boolean) => {\n      svg?.addEventListener(name, handler, capture);\n      cleanup.push(() => svg?.removeEventListener(name, handler, capture));\n    }\n\n    toolComponent = new tool({\n      target,\n      props: { \n        addEventListener,\n        drawingMode,\n        transform, \n        viewportScale\n      }\n    });\n\n    toolComponent.$on('create', \n      event => dispatch('create', event.detail));\n\n    return () => {\n      cleanup.forEach(fn => fn());\n      toolComponent.$destroy();\n    }\n  });\n</script>","<script lang=\"ts\">\n  import { createEventDispatcher, onMount } from 'svelte';\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\n  import { ShapeType, type Rectangle } from '../../../model';\n  import type { Transform } from '../..';\n\n  const dispatch = createEventDispatcher<{ create: Rectangle }>();\n  \n  /** Props **/\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\n  export let drawingMode: DrawingMode;\n  export let transform: Transform;\n\n  let lastPointerDown: number;\n\n  let origin: [x: number, y: number] | undefined; \n\n  let anchor: [number, number] | undefined;\n\n  let x: number, y: number, w: number, h: number;\n\n  const onPointerDown = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    lastPointerDown = performance.now();\n\n    if (drawingMode === 'drag') {\n      origin = transform.elementToImage(evt.offsetX, evt.offsetY);\n      anchor = origin;\n\n      x = origin[0];\n      y = origin[1];\n      w = 1;\n      h = 1;\n    }\n  }\n\n  const onPointerMove = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    if (origin) {\n      anchor = transform.elementToImage(evt.offsetX, evt.offsetY);\n\n      x = Math.min(anchor[0], origin[0]);\n      y = Math.min(anchor[1], origin[1]);\n      w = Math.abs(anchor[0] - origin[0]);\n      h = Math.abs(anchor[1] - origin[1]);\n    }\n  }\n    \n  const onPointerUp = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    const timeDifference = performance.now() - lastPointerDown;\n\n    if (drawingMode === 'click') {\n      // Not a single click - ignore\n      if (timeDifference > 300)\n        return;\n\n      // This statement caused a weird bug on OSD: when starting\n      // to draw with a quick drag (<300ms), OSD got stuck in mouseNav \n      // mode. The image still moved with the mouse cursor, even though \n      // button was no longer pressed. \n      // I'm commenting out this statement as a fix. But there must have\n      // been a reason I put it here in the first place. Keep an eye ou\n      // for regressions.\n      // \n      // And if you are ever tempted to un-comment the statement: beware!\n      \n      // evt.stopPropagation();\n\n      if (origin) {\n        stopDrawing();\n      } else {\n        // Start drawing\n        origin = transform.elementToImage(evt.offsetX, evt.offsetY);\n        anchor = origin;\n\n        x = origin[0];\n        y = origin[1];\n        w = 1;\n        h = 1;\n      }\n    } else if (origin) {\n      if (timeDifference > 300 || w * h > 100) {\n        evt.stopPropagation();\n        stopDrawing();\n      } else {\n        origin = undefined;\n        anchor = undefined;\n      }\n    }\n  }\n\n  const stopDrawing = () => {\n    // Require 4x4 pixels minimum\n    if (w * h > 15) {\n      const shape: Rectangle = {\n        type: ShapeType.RECTANGLE, \n        geometry: {\n          bounds: {\n            minX: x, \n            minY: y,\n            maxX: x + w,\n            maxY: y + h\n          },\n          x, y, w, h\n        }\n      }\n\n      dispatch('create', shape);\n    }\n    \n    origin = undefined;\n    anchor = undefined;\n  }\n\n  onMount(() => {\n    addEventListener('pointerdown', onPointerDown);\n    addEventListener('pointermove', onPointerMove);\n    addEventListener('pointerup', onPointerUp, true);\n  });\n</script>\n\n<g class=\"a9s-annotation a9s-rubberband\">\n  {#if origin}\n    <rect\n      class=\"a9s-outer\"\n      x={x} \n      y={y} \n      width={w} \n      height={h} />\n\n    <rect\n      class=\"a9s-inner\"\n      x={x} \n      y={y} \n      width={w} \n      height={h} />\n  {/if}\n</g>","<script lang=\"ts\">\n  import { onMount, createEventDispatcher } from 'svelte';\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\n  import { boundsFromPoints, computeArea, ShapeType, type Polygon } from '../../../model';\n  import { distance } from '../../utils';\n  import type { Transform } from '../..';\n\n  const dispatch = createEventDispatcher<{ create: Polygon }>();\n\n  /** Props **/\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\n  export let drawingMode: DrawingMode;\n  export let transform: Transform;\n  export let viewportScale = 1;\n\n  let lastPointerDown: { timeStamp: number, offsetX: number, offsetY: number };\n\n  let points: [number, number][] = [];\n  \n  let cursor: [number, number] | undefined;\n\n  // Keep track of the user keeping the finger\n  // in place. Long pauses will be interpreted like a \n  // double click and close the shape.\n  let touchPauseTimer: number | undefined;\n\n  let isClosable: boolean = false;\n\n  const CLOSE_DISTANCE = 20;\n\n  const TOUCH_PAUSE_LIMIT = 1500;\n\n  $: handleSize = 10 / viewportScale;\n\n  const onPointerDown = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    // Note that the event itself is ephemeral!\n    const { timeStamp, offsetX, offsetY } = evt;\n    lastPointerDown = { timeStamp, offsetX, offsetY };\n\n    if (drawingMode === 'drag') {\n      if (points.length === 0) {\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\n        points.push(point);\n\n        cursor = point;\n      }\n    }\n  }\n\n  const onPointerMove = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    if (touchPauseTimer) clearTimeout(touchPauseTimer);\n\n    if (points.length > 0) {\n      cursor = transform.elementToImage(evt.offsetX, evt.offsetY);\n\n      if (points.length >  2) {\n        const d = distance(cursor, points[0]) * viewportScale;\n        isClosable = d < CLOSE_DISTANCE;\n      }\n\n      if (evt.pointerType === 'touch') {\n        touchPauseTimer = setTimeout(() => {\n          onDblClick();\n        }, TOUCH_PAUSE_LIMIT);\n      }\n    }\n  }\n\n  const onPointerUp = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    if (touchPauseTimer) clearTimeout(touchPauseTimer);\n\n    if (drawingMode === 'click') {\n      const timeDifference = evt.timeStamp - lastPointerDown.timeStamp;\n\n      const d = distance(\n        [lastPointerDown.offsetX, lastPointerDown.offsetY], \n        [evt.offsetX, evt.offsetY]);\n\n      if (timeDifference > 300 || d > 15) // Not a single click - ignore\n        return;\n\n      if (isClosable) {\n        stopDrawing();\n      } else if (points.length === 0) {\n        // Start drawing\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\n        points.push(point);\n\n        cursor = point;\n      } else {\n        points.push(cursor!);\n      }\n    } else {\n      // Require minimum drag of 4px\n      if (points.length === 1) {\n        const dist = distance(points[0], cursor!);\n\n        if (dist <= 4) {\n          // Cancel\n          points = [];\n          cursor = undefined;\n\n          return;\n        }\n      }\n\n      // Stop click event from propagating if we're drawing\n      evt.stopImmediatePropagation();\n\n      if (isClosable) {\n        stopDrawing();\n      } else {\n        points.push(cursor!);\n      }\n    }\n  }\n\n  const onDblClick = () => {\n    if (!cursor) return;\n\n    // Require min 3 points (incl. cursor) and minimum\n    // polygon area\n    const p = [...points, cursor];\n\n    const shape: Polygon = {\n      type: ShapeType.POLYGON, \n      geometry: {\n        bounds: boundsFromPoints(p),\n        points: p\n      }\n    }\n\n    const area = computeArea(shape);\n    if (area > 4) {\n      points = [];\n      cursor = undefined;\n    \n      dispatch('create', shape);\n    }\n  }\n\n  const stopDrawing = () => {\n    const shape: Polygon = {\n      type: ShapeType.POLYGON, \n      geometry: {\n        bounds: boundsFromPoints(points),\n        points: [...points]\n      }\n    }\n\n    points = [];\n    cursor = undefined;\n  \n    dispatch('create', shape);\n  }\n\n  onMount(() => {\n    addEventListener('pointerdown', onPointerDown, true);\n    addEventListener('pointermove', onPointerMove);\n    addEventListener('pointerup', onPointerUp, true);\n    addEventListener('dblclick', onDblClick, true);\n  });\n</script>\n\n<g class=\"a9s-annotation a9s-rubberband\">\n  {#if cursor}\n    {@const coords = (isClosable ? points : [...points, cursor]).map(xy => xy.join(',')).join(' ')}\n      <polygon \n        class=\"a9s-outer\"\n        points={coords} />\n\n      <polygon \n        class=\"a9s-inner\"\n        points={coords} />\n        \n    {#if isClosable}\n      <rect \n        class=\"a9s-handle\"\n        x={points[0][0] - handleSize / 2} \n        y={points[0][1] - handleSize / 2} \n        height={handleSize} \n        width={handleSize} />\n    {/if}\n  {/if}\n</g>","import type { SvelteComponent } from 'svelte';\nimport { RubberbandRectangle } from './rectangle';\nimport { RubberbandPolygon } from './polygon';\nimport type { DrawingMode } from '../../AnnotoriousOpts';\n\nexport type DrawingTool = 'rectangle' | 'polygon' | string;\n\nexport type DrawingToolOpts = {\n\n  drawingMode?: DrawingMode;\n\n  [key: string]: any;\n\n}\n\n// @ts-ignore\nconst REGISTERED = new Map<DrawingTool, { tool: typeof SvelteComponent, opts?: DrawingToolOpts }>([\n  ['rectangle', { tool: RubberbandRectangle }],\n  ['polygon', { tool: RubberbandPolygon }]\n]);\n\nexport const listDrawingTools = () => [...REGISTERED.keys()];\n\nexport const getTool = (name: string) => REGISTERED.get(name);\n  \nexport const registerTool = (name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts) =>\n  REGISTERED.set(name, { tool, opts });\n","<script lang=\"ts\">\n  import type { DrawingStyleExpression } from '@annotorious/core';\n  import type { Geometry, EllipseGeometry, ImageAnnotation } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  \n  /** Props */\n  export let annotation: ImageAnnotation;\n  export let geom: Geometry;\n  export let style: DrawingStyleExpression<ImageAnnotation> | undefined;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  const { cx, cy, rx, ry } = geom as EllipseGeometry;\n</script>\n\n<g class=\"a9s-annotation\" data-id={annotation.id}>\n  <ellipse\n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    cx={cx} \n    cy={cy} \n    rx={rx} \n    ry={ry} />\n\n  <ellipse\n    class=\"a9s-inner\"\n    style={computedStyle}\n    cx={cx} \n    cy={cy} \n    rx={rx} \n    ry={ry} />\n</g>\n","<script lang=\"ts\">\n  import type { DrawingStyleExpression } from '@annotorious/core';\n  import type { Geometry, ImageAnnotation, PolygonGeometry } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  \n  /** Props **/\n  export let annotation: ImageAnnotation;\n  export let geom: Geometry;\n  export let style: DrawingStyleExpression<ImageAnnotation> | undefined;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  const { points } = geom as PolygonGeometry;\n</script>\n\n<g class=\"a9s-annotation\" data-id={annotation.id}>\n  <polygon \n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    points={points.map(xy => xy.join(',')).join(' ')} />\n\n  <polygon \n    class=\"a9s-inner\"\n    style={computedStyle}\n    points={points.map(xy => xy.join(',')).join(' ')} />\n</g>","<script lang=\"ts\">\n  import type { DrawingStyleExpression } from '@annotorious/core';\n  import type { Geometry, ImageAnnotation, RectangleGeometry } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  \n  /** Props **/\n  export let annotation: ImageAnnotation;\n  export let geom: Geometry;\n  export let style: DrawingStyleExpression<ImageAnnotation> | undefined;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  $: ({ x, y, w, h } = geom as RectangleGeometry);\n</script>\n\n<g class=\"a9s-annotation\" data-id={annotation.id}>\n  <rect\n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    x={x} \n    y={y} \n    width={w} \n    height={h} />\n\n  <rect\n    class=\"a9s-inner\"\n    style={computedStyle}\n    x={x} \n    y={y} \n    width={w} \n    height={h} />\n</g>\n","export interface Transform { \n\n  elementToImage: (offsetX: number, offsetY: number) => [ number, number ] \n\n}\n\nexport const IdentityTransform: Transform = {\n\n  elementToImage:  (offsetX: number, offsetY: number) => ([ offsetX, offsetY ])\n\n}\n\nexport const createSVGTransform = (svg: SVGSVGElement): Transform => ({\n\n  elementToImage: (offsetX: number, offsetY: number) => {\n    const bbox = svg.getBoundingClientRect();\n\n    const pt = svg.createSVGPoint();\n    pt.x = offsetX + bbox.x;\n    pt.y = offsetY + bbox.y;\n  \n    const { x, y } = pt.matrixTransform(svg.getScreenCTM()!.inverse());\n    return [x, y];\n  }\n\n});","import { createEventDispatcher } from 'svelte';\nimport type { SvelteImageAnnotationStore } from '../state';\nimport type { Annotation } from '@annotorious/core';\n\nexport interface SVGAnnotationLayerPointerEvent<T extends Annotation> {\n    \n  originalEvent: PointerEvent;\n  \n  annotation?: T;\n\n}\n\n// Maximum amount of ms between pointer down and up to make it a click\nconst MAX_CLICK_DURATION = 250;\n\nexport const addEventListeners = <T extends Annotation>(svg: SVGSVGElement, store: SvelteImageAnnotationStore<T>) => {\n  const dispatch = createEventDispatcher<{ click: SVGAnnotationLayerPointerEvent<T> }>();\n\n  let lastPointerDown: number;\n\n  const onPointerDown = () =>\n    lastPointerDown = performance.now();\n\n  const onPointerUp = (evt: PointerEvent) => {\n    const duration = performance.now() - lastPointerDown;\n\n    if (duration < MAX_CLICK_DURATION) {\n      const { x, y } = getSVGPoint(evt, svg);\n\n      const annotation = store.getAt(x, y) as T | undefined;\n\n      if (annotation)\n        dispatch('click', { originalEvent: evt, annotation });\n      else\n        dispatch('click', { originalEvent: evt });\n    }\n  }\n\n  return { onPointerDown, onPointerUp };\n}\n\nexport const getSVGPoint = (evt: PointerEvent, svg: SVGSVGElement) => {\n  const pt = svg.createSVGPoint();\n  const bbox = svg.getBoundingClientRect();\n\n  const x = evt.clientX - bbox.x;\n  const y = evt.clientY - bbox.y;\n\n  const { left, top } = svg.getBoundingClientRect();\n  pt.x = x + left;\n  pt.y = y + top;\n\n  return pt.matrixTransform(svg.getScreenCTM()!.inverse());\n}","<script lang=\"ts\" generics=\"I extends Annotation, E extends unknown\">\n  import { type SvelteComponent, onMount } from 'svelte';\n  import { v4 as uuidv4 } from 'uuid';\n  import type { Annotation, DrawingStyleExpression, StoreChangeEvent, User } from '@annotorious/core';\n  import { isImageAnnotation, ShapeType } from '../model';\n  import type { ImageAnnotation, Shape} from '../model';\n  import { getEditor as _getEditor, EditorMount } from './editors';\n  import { Ellipse, Polygon, Rectangle} from './shapes';\n  import { getTool, listDrawingTools, ToolMount } from './tools';\n  import { enableResponsive } from './utils';\n  import { createSVGTransform } from './Transform';\n  import { addEventListeners, getSVGPoint } from './SVGAnnotationLayerPointerEvent';\n  import type { SvelteImageAnnotatorState } from 'src/state';\n  import type { DrawingMode } from 'src/AnnotoriousOpts';\n\n  /** Props **/\n  export let drawingEnabled: boolean;\n  export let image: HTMLImageElement | HTMLCanvasElement;\n  export let preferredDrawingMode: DrawingMode;\n  export let state: SvelteImageAnnotatorState<I, E>;\n  export let style: DrawingStyleExpression<ImageAnnotation> | undefined = undefined;\n  export let toolName: string = listDrawingTools()[0];\n  export let user: User;\n  export let visible = true;\n\n  // Trick to force tool re-mounting on cancelDrawing\n  let toolMountKey = 0;\n\n  /** API methods */\n  export const cancelDrawing = () => toolMountKey += 1;\n  export const getDrawingTool = () => toolName;\n  export const isDrawingEnabled = () => drawingEnabled;\n\n  $: ({ tool, opts } = getTool(toolName) || { tool: undefined, opts: undefined });\n\n  $: drawingMode = opts?.drawingMode || preferredDrawingMode;\n\n  /** Drawing tool layer **/\n  let drawingEl: SVGGElement;\n\n  /** Responsive scaling **/\n  let svgEl: SVGSVGElement;\n    \n  let scale: ReturnType<typeof enableResponsive>;\n\n  onMount(() => scale = enableResponsive(image, svgEl));\n\n  $: transform = createSVGTransform(svgEl);\n\n  /** Selection tracking */\n  const { hover, selection, store } = state;\n\n  $: ({ onPointerDown, onPointerUp } = addEventListeners(svgEl, store));\n\n  let storeObserver: (event: StoreChangeEvent<I>) => void | undefined;\n\n  let editableAnnotations: ImageAnnotation[] | undefined;\n\n  $: isEditable = (a: ImageAnnotation) => $selection.selected.find(s => s.id === a.id && s.editable);\n\n  $: trackSelection($selection.selected);\n\n  const trackSelection = (selected: { id: string, editable?: boolean }[]) => {\n    if (storeObserver)\n      store.unobserve(storeObserver);\n\n    // Track only editable annotations\n    const editableIds = \n      selected.filter(({ editable }) => editable).map(({ id }) => id);\n\n    if (editableIds.length > 0) {\n      // Resolve selected IDs from the store\n      editableAnnotations = editableIds\n        .map(id => store.getAnnotation(id)!)\n        .filter(a => a && isImageAnnotation(a));\n\n      // Track updates on the editable annotations\n      storeObserver = (event: StoreChangeEvent<I>) => {\n        const { updated } = event.changes;\n        editableAnnotations = updated?.map(change => change.newValue) as unknown as ImageAnnotation[];\n      }   \n      \n      store.observe(storeObserver, { annotations: editableIds });\n    } else {\n      editableAnnotations = undefined;\n    }\n  }\n\n  const onSelectionCreated = <S extends Shape>(evt: CustomEvent<S>) => {\n    const id = uuidv4();\n\n    const annotation: ImageAnnotation = {\n      id,\n      bodies: [],\n      target: {\n        annotation: id,\n        selector: evt.detail,\n        creator: user,\n        created: new Date()\n      }\n    };\n\n    store.addAnnotation(annotation as unknown as Partial<I>);\n\n    selection.setSelected(annotation.id);\n  }\n\n  const onChangeSelected = (annotation: ImageAnnotation) => (event: CustomEvent<Shape>) => {  \n    const { target } = annotation;\n\n    // We don't consider a shape edit an 'update' if it happens within 10mins\n    const GRACE_PERIOD = 10 * 60 * 1000;\n\n    const isUpdate = \n      target.creator?.id !== user.id ||\n      !target.created ||\n      new Date().getTime() - target.created.getTime() > GRACE_PERIOD;\n\n    store.updateTarget({\n      ...target,\n      selector: event.detail,\n      created: isUpdate ? target.created : new Date(),\n      updated: isUpdate ? new Date() : undefined,\n      updatedBy: isUpdate ? user : undefined\n    });\n  }\n\n  const onPointerMove = (evt: PointerEvent) => {\n    const { x, y } = getSVGPoint(evt, svgEl);\n\n    const hit = store.getAt(x, y);\n    if (hit) {\n      if ($hover !== hit.id) {\n        hover.set(hit.id);\n      }\n    } else {\n      hover.set(undefined);\n    }\n  }\n\n  // To get around lack of TypeScript support in Svelte markup\n  const getEditor = (shape: Shape): typeof SvelteComponent => _getEditor(shape)!;\n</script>\n\n<svg\n  bind:this={svgEl}\n  class=\"a9s-annotationlayer\"\n  class:drawing={tool}\n  class:hidden={!visible}\n  class:hover={$hover}\n  on:pointerup={onPointerUp}\n  on:pointerdown={onPointerDown}\n  on:pointermove={onPointerMove}>\n  \n  <g>\n    {#each $store.filter(a => isImageAnnotation(a)) as annotation}\n      {#if isImageAnnotation(annotation) && !isEditable(annotation)}\n        {@const selector = annotation.target.selector}\n        {#key annotation.id}\n          {#if (selector?.type === ShapeType.ELLIPSE)}\n            <Ellipse \n              annotation={annotation} \n              geom={selector?.geometry} \n              style={style} />\n          {:else if (selector?.type === ShapeType.RECTANGLE)}\n            <Rectangle \n              annotation={annotation} \n              geom={selector.geometry} \n              style={style} />\n          {:else if (selector?.type === ShapeType.POLYGON)}\n            <Polygon \n              annotation={annotation} \n              geom={selector.geometry} \n              style={style} />\n          {/if}\n        {/key}\n      {/if}\n    {/each}\n  </g>\n\n  <g \n    bind:this={drawingEl}\n    class=\"drawing\" >\n    {#if drawingEl}\n      {#if editableAnnotations}\n        {#each editableAnnotations as editable}\n          {@const editor = getEditor(editable.target.selector)}\n          {#if editor}\n            {#key editable.id}        \n              <EditorMount\n                target={drawingEl}\n                editor={getEditor(editable.target.selector)}\n                annotation={editable}\n                style={style}\n                transform={transform}\n                viewportScale={$scale}\n                on:change={onChangeSelected(editable)} />\n            {/key}\n          {/if}\n        {/each}\n      {:else if (tool && drawingEnabled)} \n        {#key `${toolName}-${toolMountKey}`}\n          <ToolMount \n            target={drawingEl}\n            tool={tool}\n            drawingMode={drawingMode}\n            transform={transform}\n            viewportScale={$scale}\n            on:create={onSelectionCreated} />\n        {/key}\n      {/if}\n    {/if}\n  </g>\n</svg>\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","import RBush from 'rbush';\nimport { ShapeType,computeArea, intersects, isImageAnnotationTarget } from '../model';\nimport type { ImageAnnotationTarget } from '../model';\nimport type { AnnotationTarget } from '@annotorious/core';\n\ninterface IndexedTarget {\n\n  minX: number;\n\n  minY: number;\n\n  maxX: number;\n\n  maxY: number;\n\n  target: ImageAnnotationTarget;\n\n}\n\nexport const createSpatialTree = () => {\n\n  const tree = new RBush<IndexedTarget>();\n\n  const index = new Map<string, IndexedTarget>();\n\n  const all = () => [...index.values()];\n\n  const clear = () => {\n    tree.clear();\n    index.clear();\n  }\n\n  const insert = (target: AnnotationTarget) => {\n    if (!isImageAnnotationTarget(target)) return;\n\n    const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\n\n    const t = { minX, minY, maxX, maxY, target };\n\n    tree.insert(t);\n    index.set(target.annotation, t);\n  };\n\n  const remove = (target: AnnotationTarget) => {\n    if (!isImageAnnotationTarget(target)) return;\n\n    const item = index.get(target.annotation);\n    if (item)\n      tree.remove(item);\n    index.delete(target.annotation);\n  };\n\n  const update = (previous: AnnotationTarget, updated: AnnotationTarget) => {\n    remove(previous);\n    insert(updated);\n  };\n\n  const set = (targets: AnnotationTarget[], replace: boolean = true) => {\n    if (replace) \n      clear();\n\n    const indexedTargets = targets.reduce<IndexedTarget[]>((all, target) => {\n      if (isImageAnnotationTarget(target)) {\n        // In case the host app injects any custom annotations, the \n        // spatial index should simply ignore them. \n        const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\n        return [...all, { minX, minY, maxX, maxY, target } as IndexedTarget];\n      } else {\n        return all;\n      }\n    }, []);\n\n    indexedTargets.forEach(t => index.set(t.target.annotation, t));\n    tree.load(indexedTargets);\n  };\n\n  const getAt = (x: number, y: number): ImageAnnotationTarget | undefined => {\n    const idxHits = tree.search({\n      minX: x,\n      minY: y,\n      maxX: x,\n      maxY: y\n    }).map(item => item.target);\n\n    // Exact hit test on shape (not needed for rectangles!)\n    const exactHits = idxHits.filter(target => {\n      return (target.selector.type === ShapeType.RECTANGLE) ||\n        intersects(target.selector, x, y);\n    });\n\n    // Get smallest shape\n    if (exactHits.length > 0) {\n      exactHits.sort((a, b) => computeArea(a.selector) - computeArea(b.selector));\n      return exactHits[0];\n    }\n  };\n\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\n    tree.search({\n      minX: x,\n      minY: y,\n      maxX: x + width,\n      maxY: y + height\n    }).map(item => item.target);\n  \n  const size = () => tree.all().length;\n\n  return {\n    all,\n    clear,\n    getAt,\n    getIntersecting,\n    insert,\n    remove,\n    set,\n    size,\n    update\n  }\n\n}\n","import type { ImageAnnotation, ImageAnnotationTarget } from '../model';\nimport type { AnnotoriousOpts } from '../AnnotoriousOpts';\nimport { createSpatialTree } from './spatialTree';\nimport { \n  createViewportState,\n  toSvelteStore,\n  type Annotation,\n  type AnnotatorState, \n  type HoverState,\n  type SelectionState\n} from '@annotorious/core';\nimport { \n  createHoverState, \n  createSelectionState, \n  createStore\n} from '@annotorious/core';\nimport type { \n  ImageAnnotationStore,\n  SvelteImageAnnotationStore, \n  SvelteImageAnnotatorState\n} from './ImageAnnotationStore';\n\nexport type ImageAnnotatorState<I extends Annotation = ImageAnnotation, E extends unknown = ImageAnnotation> = AnnotatorState<I, E> & {\n\n  store: ImageAnnotationStore<I>;\n\n  selection: SelectionState<I, E>;\n\n  hover: HoverState<I>;\n\n}\n\nexport const createImageAnnotatorState = <I extends Annotation, E extends unknown> (\n  opts: AnnotoriousOpts<I, E>\n): ImageAnnotatorState<I, E> => {\n\n  const store = createStore<I>();\n\n  const tree = createSpatialTree();\n\n  const selection = createSelectionState<I, E>(store, opts.userSelectAction, opts.adapter);\n\n  const hover = createHoverState(store);\n\n  const viewport = createViewportState();\n\n  store.observe(({ changes }) => {\n    tree.set((changes.created || []).map(a => a.target as ImageAnnotationTarget), false);\n    \n    (changes.deleted || []).forEach(a => tree.remove(a.target as ImageAnnotationTarget));\n    \n    (changes.updated || []).forEach(({ oldValue, newValue }) => \n      tree.update(oldValue.target, newValue.target));\n  });\n\n  const getAt = (x: number, y: number): ImageAnnotation | undefined => {\n    const target = tree.getAt(x, y);\n    return target ? store.getAnnotation(target.annotation) as unknown as ImageAnnotation : undefined; \n  }\n\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\n    tree.getIntersecting(x, y, width, height).map(target => store.getAnnotation(target.annotation) as unknown as ImageAnnotation);\n\n  return {\n    store: {\n      ...store,\n      getAt,\n      getIntersecting\n    },\n    selection,\n    hover,\n    viewport\n  } as ImageAnnotatorState<I, E>;\n\n}\n\nexport const createSvelteImageAnnotatorState = <I extends Annotation, E extends unknown>(  \n  opts: AnnotoriousOpts<I, E>\n): SvelteImageAnnotatorState<I, E> => {\n\n  const state = createImageAnnotatorState<I, E>(opts);\n  \n  return {\n    ...state,\n    store: toSvelteStore(state.store) as SvelteImageAnnotationStore<I>\n  }\n\n}\n","import type { Theme } from '../../AnnotoriousOpts';\n\nexport const sampleBrightness = (imageOrCanvas: HTMLElement) => {\n\n  let canvas: HTMLCanvasElement;\n\n  let context: CanvasRenderingContext2D;\n\n  if (imageOrCanvas.nodeName === 'CANVAS') {\n    canvas = imageOrCanvas as HTMLCanvasElement;\n    context = canvas.getContext('2d', { willReadFrequently: true })!;\n  } else {\n    const img = imageOrCanvas as HTMLImageElement;\n    // Copy image to in-memory canvas for processing\n    canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n\n    context = canvas.getContext('2d', { willReadFrequently: true })!;\n    context.drawImage(img, 0, 0, img.width, img.height);\n  }\n\n  let totalBrightness = 0;\n\n  // Sample a grid of points spaced 10% width/height apart (= 9 x 9 samples)\n  for (let i = 1; i < 10; i++) {\n    for (let j = 1; j < 10; j++) {\n      const x = Math.round(j * canvas.width / 10);\n      const y = Math.round(i * canvas.height / 10);\n\n      const pixelData = context.getImageData(x, y, 1, 1).data;\n      const brightness = (0.299 * pixelData[0] + 0.587 * pixelData[1] + 0.114 * pixelData[2]) / 255;\n      totalBrightness += brightness;\n    }\n  }\n\n  return totalBrightness / 81;\n}\n\nexport const detectTheme = (imageOrCanvas: HTMLElement) => {\n  const brightness = sampleBrightness(imageOrCanvas);\n  const theme = brightness > 0.6 ? 'dark' : 'light'\n\n  console.log(`[Annotorious] Image brightness: ${brightness.toFixed(1)}. Setting ${theme} theme.`);\n\n  return theme;\n}\n\nexport const setTheme = (imageOrCanvas: HTMLElement, container: HTMLElement, theme: Theme) =>\n  container.setAttribute('data-theme', theme === 'auto' ? detectTheme(imageOrCanvas) : theme);","import type { Annotation, DrawingStyleExpression, FormatAdapter, History, UserSelectActionExpression } from '@annotorious/core';\nimport type { ImageAnnotation } from './model';\n\nexport interface AnnotoriousOpts<I extends Annotation = ImageAnnotation, E extends unknown = ImageAnnotation> {\n\n  adapter?: FormatAdapter<I, E>;\n\n  autoSave?: boolean;\n\n  drawingEnabled?: boolean;\n\n  // 'click': starts on single click, user cannot select unless drawingEnabled = false\n  // 'drag': starts drawing on drag, single click always selects\n  drawingMode?: DrawingMode;\n\n  initialHistory?: History<I>;\n\n  // Modal selection mode WILL NOT CHANGE OR DE-SELECT THE CURRENT SELECTION if another \n  // annotation or empty space is clicked. Warning: this means that the user is no longer\n  // able to de-select until a programmatic de-select is triggered from the host app!\n  // Use this mode only in combination with custom popups!\n  modalSelect?: boolean;\n\n  userSelectAction?: UserSelectActionExpression<E>;\n\n  style?: DrawingStyleExpression<ImageAnnotation>;\n\n  theme?: Theme;\n\n}\n\nexport type DrawingMode = 'click' | 'drag';\n\nexport type Theme = 'dark' | 'light' | 'auto';\n\nexport const fillDefaults = <I extends Annotation = ImageAnnotation, E extends unknown = ImageAnnotation> (\n  opts: AnnotoriousOpts<I, E>,\n  defaults: AnnotoriousOpts<I, E>\n): AnnotoriousOpts<I, E> => ({\n  ...opts,\n  drawingEnabled: opts.drawingEnabled === undefined ? defaults.drawingEnabled : opts.drawingEnabled,\n  drawingMode: opts.drawingMode || defaults.drawingMode,\n  userSelectAction: opts.userSelectAction || defaults.userSelectAction,\n  theme: opts.theme || defaults.theme\n});\n\n\n\n\n","import type { Annotation, UndoStack } from '@annotorious/core';\n\nexport const isMac = (() => {\n  if (typeof navigator === 'undefined') return false;\n\n  return navigator.userAgent.indexOf('Mac OS X') !== -1;\n})();\n\nexport const initKeyboardCommands = <T extends Annotation>(\n  undoStack: UndoStack<T>,\n  container?: Element \n) => {\n\n  const el = container || document;\n\n  const onWinKeyDown = (evt: Event) => {\n    const event = evt as KeyboardEvent;\n    \n    if (event.key === 'z' && event.ctrlKey) {\n      undoStack.undo();\n    } else if (event.key === 'y' && event.ctrlKey) {\n      undoStack.redo()\n    }\n  };\n\n  const onMacKeyDown = (evt: Event) => {\n    const event = evt as KeyboardEvent;\n\n    if (event.key === 'z' && event.metaKey) {\n      if (event.shiftKey) {\n        undoStack.redo()\n      } else {\n        undoStack.undo();\n      }\n    }\n  }\n\n  const destroy = () => {\n    if (isMac) {\n      el.removeEventListener('keydown', onMacKeyDown);\n    } else {\n      el.removeEventListener('keydown', onWinKeyDown);\n    }\n  }\n\n  if (isMac)\n    el.addEventListener('keydown', onMacKeyDown);\n  else\n    el.addEventListener('keydown', onWinKeyDown);\n\n  return { \n    destroy\n  }\n}\n","import type { SvelteComponent } from 'svelte';\nimport { UserSelectAction } from '@annotorious/core';\nimport type { Annotation, Annotator, DrawingStyleExpression, Filter, User } from '@annotorious/core';\nimport { createAnonymousGuest, createBaseAnnotator, createLifecycleObserver, createUndoStack } from '@annotorious/core';\nimport { registerEditor } from './annotation/editors';\nimport { getTool, registerTool, listDrawingTools, type DrawingTool } from './annotation/tools';\nimport { SVGAnnotationLayer } from './annotation';\nimport type { DrawingToolOpts, SVGAnnotationLayerPointerEvent } from './annotation';\nimport type { ImageAnnotation, ShapeType } from './model';\nimport { createSvelteImageAnnotatorState } from './state';\nimport { setTheme as _setTheme } from './themes';\nimport { fillDefaults, type Theme } from './AnnotoriousOpts';\nimport type { AnnotoriousOpts } from './AnnotoriousOpts';\nimport { initKeyboardCommands } from './keyboardCommands';\n\nimport './Annotorious.css';\nimport './themes/dark/index.css';\nimport './themes/light/index.css';\n\nexport interface ImageAnnotator<I extends Annotation = ImageAnnotation, E extends unknown = ImageAnnotation> extends Annotator<I, E> { \n\n  element: HTMLDivElement;\n\n  cancelDrawing(): void;\n\n  getDrawingTool(): string | undefined;\n\n  isDrawingEnabled(): boolean;\n\n  listDrawingTools(): string[];\n\n  registerDrawingTool(name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts): void;\n\n  registerShapeEditor(shapeType: ShapeType, editor: typeof SvelteComponent): void;\n\n  setDrawingTool(name: DrawingTool): void; \n\n  setDrawingEnabled(enabled: boolean): void;\n\n  setTheme(theme: Theme): void;\n\n}\n\nexport const createImageAnnotator = <I extends Annotation = ImageAnnotation, E extends unknown = ImageAnnotation>(\n  image: string | HTMLImageElement | HTMLCanvasElement, \n  options: AnnotoriousOpts<I, E> = {}\n): ImageAnnotator<I, E> => {\n\n  if (!image)\n    throw 'Missing argument: image';\n\n  const img = (\n    typeof image === 'string' ? document.getElementById(image) : image\n  ) as HTMLImageElement | HTMLCanvasElement;\n\n  const opts = fillDefaults<I, E>(options, {\n    drawingEnabled: true,\n    drawingMode: 'drag',\n    userSelectAction: UserSelectAction.EDIT,\n    theme: 'light'\n  });\n\n  const state = createSvelteImageAnnotatorState<I, E>(opts);\n\n  const { selection, store } = state;\n\n  const undoStack = createUndoStack(store, opts.initialHistory);\n\n  const lifecycle = createLifecycleObserver<I, E>(\n    state, undoStack, opts.adapter, opts.autoSave\n  );\n\n  // We'll wrap the image in a container DIV.\n  const container = document.createElement('DIV') as HTMLDivElement;\n  container.style.position = 'relative';\n  container.style.display = 'inline-block';\n\n  // Wrapper div has unwanted margin at the bottom otherwise!\n  img.style.display = 'block';\n\n  img.parentNode!.insertBefore(container, img);\n  container.appendChild(img);\n\n  const keyboardCommands = initKeyboardCommands(undoStack);\n\n  let currentUser: User = createAnonymousGuest();\n\n  _setTheme(img, container, opts.theme!);\n\n  const annotationLayer = new SVGAnnotationLayer({\n    target: container,\n    props: { \n      drawingEnabled: Boolean(opts.drawingEnabled), \n      image: img, \n      preferredDrawingMode: opts.drawingMode!,\n      state: state, \n      style: opts.style, \n      user: currentUser\n    }\n  });\n\n  annotationLayer.$on('click', (evt: CustomEvent<SVGAnnotationLayerPointerEvent<I>>) => {\n    const { originalEvent, annotation } = evt.detail;\n    if (annotation)\n      selection.userSelect(annotation.id, originalEvent);\n    else if (!selection.isEmpty())\n      selection.clear();\n  });\n\n  /*************************/\n  /*      External API     */\n  /******++++++*************/\n\n  // Most of the external API functions are covered in the base annotator\n  const base = createBaseAnnotator<I, E>(state, undoStack, opts.adapter);\n\n  const cancelDrawing = () =>\n    annotationLayer.cancelDrawing();\n\n  const destroy = () => {\n    // Destroy Svelte annotation layer\n    annotationLayer.$destroy();\n\n    // Unwrap the image\n    container.parentNode!.insertBefore(img, container);\n    container.parentNode!.removeChild(container);\n\n    // Other cleanup actions\n    keyboardCommands.destroy();\n    undoStack.destroy();\n  }\n\n  const getDrawingTool = () =>\n    annotationLayer.getDrawingTool();\n\n  const getUser = () => currentUser;\n\n  const isDrawingEnabled = () => \n    annotationLayer.isDrawingEnabled();\n\n  const registerDrawingTool = (name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts) =>\n    registerTool(name, tool, opts);\n\n  const registerShapeEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\n    registerEditor(shapeType, editor);\n\n  const setDrawingTool = (name: DrawingTool) => {\n    // Validate that the tool exists\n    const toolSpec = getTool(name);\n    if (!toolSpec)\n      throw `No drawing tool named ${name}`;\n\n    // @ts-ignore\n    annotationLayer.$set({ toolName: name })\n  }\n\n  const setDrawingEnabled = (enabled: boolean) =>\n    annotationLayer.$set({ drawingEnabled: enabled });\n  \n  const setFilter = (_: Filter) => {\n    console.warn('Filter not implemented yet');\n  }\n\n  const setStyle = (style: DrawingStyleExpression<I> | undefined) =>\n    annotationLayer.$set({ style: style as DrawingStyleExpression<ImageAnnotation> });\n\n  const setTheme = (theme: Theme) => _setTheme(img, container, theme);\n  \n  const setUser = (user: User) => {\n    currentUser = user;\n    annotationLayer.$set({ user });\n  }\n\n  const setVisible = (visible: boolean) =>\n    // @ts-ignore\n    annotationLayer.$set({ visible });\n\n  return {\n    ...base,\n    cancelDrawing,\n    destroy,\n    getDrawingTool,\n    getUser,\n    isDrawingEnabled,\n    listDrawingTools,\n    on: lifecycle.on,\n    off: lifecycle.off,\n    registerDrawingTool,\n    registerShapeEditor,\n    setDrawingEnabled,\n    setDrawingTool,\n    setFilter,\n    setStyle,\n    setTheme,\n    setUser,\n    setVisible,\n    element: container,\n    state\n  }\n\n}\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","subscribe","store","callbacks","callback","unsub","component_subscribe","component","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","exclude_internal_props","props","result","null_to_empty","value","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","svg_element","name","text","data","space","empty","listen","event","handler","options","attr","attribute","children","element","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","current_component","set_current_component","get_current_component","onMount","createEventDispatcher","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","e","$$","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","ensure_array_like","array_like_or_iterator","create_component","mount_component","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","__publicField","index","PUBLIC_VERSION","ShapeType","Utils","registerShapeUtil","util","computeArea","shape","intersects","x","y","boundsFromPoints","points","minX","minY","maxX","maxY","EllipseUtil","cx","cy","rx","ry","rot","cos","sin","dx","dy","tdx","tdy","PolygonUtil","polygon","area","j","inside","xi","yi","xj","yj","RectangleUtil","rect","isImageAnnotation","isImageAnnotationTarget","t","_a","_b","parseFragmentSelector","fragmentOrSelector","invertY","regex","matches","_","prefix","unit","d","w","h","serializeFragmentSelector","geometry","SVG_NAMESPACE","sanitize","doc","cleanEl","el","scripts","insertSVGNamespace","originalDoc","namespaced","parseSVGXML","isPrefixDeclared","isDefaultNamespaceSVG","parseSVGPolygon","str","p","parseSVGEllipse","bounds","parseSVGSelector","valueOrSelector","serializeSVGSelector","geom","xy","byteToHex","unsafeStringify","arr","offset","getRandomValues","rnds8","rng","randomUUID","native","v4","buf","rnds","M","V","X","N","s","m","f","A","Ue","Z","z","Se","C","D","U","v","W","E","T","R","F","K","ee","te","q","G","Y","De","ne","oe","se","ie","J","O","re","n","o","ae","$","ce","Oe","l","u","g","S","H","r","L","B","I","P","Re","Q","le","Be","xe","Ie","ue","Ne","ze","$e","fe","pe","ge","he","me","Ve","Ae","be","_e","Ye","ve","Ee","W3CImageFormat","source","opts","serialized","parseW3CImageAnnotation","annotation","serializeW3CImageAnnotation","annotationId","uuidv4","creator","created","modified","body","bodies","parseW3CBodies","w3cTarget","w3cSelector","selector","parseW3CUser","updated","updatedBy","error","serializeW3CBodies","handle_changes","each_value","polygon0","polygon0_points_value","func","polygon1","polygon1_points_value","func_1","current","each_blocks","grab","$$props","computedStyle","transform","viewportScale","editor","handle","delta","idx","$$invalidate","distance","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","setSize","image","svg","naturalWidth","naturalHeight","width","height","img","enableResponsive","resizeObserver","svgBounds","scale","isTouch","rect_class_value","circle","circle_r_value","create_if_block","radius","touched","onPointerDown","onPointerUp","handleSize","rect0","rect0_x_value","rect0_y_value","rect0_width_value","rect0_height_value","rect1","rect1_x_value","rect1_y_value","rect1_width_value","rect1_height_value","rect2","rect2_x_value","rect2_y_value","rect2_width_value","rect3","rect3_x_value","rect3_y_value","rect3_height_value","rect4","rect4_x_value","rect4_y_value","rect4_width_value","rect5","rect5_x_value","rect5_y_value","rect5_height_value","handle0_changes","handle1_changes","handle2_changes","handle3_changes","rectangle","initialBounds","x0","y0","x1","y1","REGISTERED","RectangleEditor","PolygonEditor","getEditor","registerEditor","shapeType","dispatch","grabbedHandle","origin","initialShape","onGrab","evt","onPointerMove","onRelease","computeStyle","style","computed","fill","fillOpacity","stroke","strokeWidth","strokeOpacity","css","editorComponent","drawingMode","tool","toolComponent","cleanup","addEventListener","capture","lastPointerDown","timeDifference","stopDrawing","child_ctx","create_if_block_1","rect_x_value","rect_y_value","get_if_ctx","CLOSE_DISTANCE","TOUCH_PAUSE_LIMIT","cursor","touchPauseTimer","isClosable","timeStamp","offsetX","offsetY","point","onDblClick","RubberbandRectangle","RubberbandPolygon","listDrawingTools","getTool","registerTool","g_data_id_value","ellipse0","ellipse1","IdentityTransform","createSVGTransform","bbox","pt","MAX_CLICK_DURATION","addEventListeners","getSVGPoint","left","top","constants_0","previous_key","polygon_changes","rectangle_changes","ellipse_changes","_c","show_if","editormount_changes","create_if_block_2","each_value_1","g0","g1","drawingEnabled","preferredDrawingMode","state","toolName","user","visible","toolMountKey","cancelDrawing","getDrawingTool","isDrawingEnabled","drawingEl","svgEl","hover","selection","storeObserver","editableAnnotations","trackSelection","selected","editableIds","editable","id","change","onSelectionCreated","onChangeSelected","GRACE_PERIOD","isUpdate","hit","$hover","_getEditor","$$value","isEditable","$selection","quickselect","right","compare","defaultCompare","sd","newLeft","newRight","swap","tmp","RBush","maxEntries","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","path","indexes","parent","goingUp","findItem","items","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","extend","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","stack","mid","createSpatialTree","tree","all","clear","remove","exactHits","replace","indexedTargets","previous","createImageAnnotatorState","createStore","createSelectionState","createHoverState","viewport","createViewportState","changes","oldValue","newValue","createSvelteImageAnnotatorState","toSvelteStore","sampleBrightness","imageOrCanvas","canvas","context","totalBrightness","pixelData","brightness","detectTheme","theme","setTheme","container","fillDefaults","defaults","isMac","initKeyboardCommands","undoStack","onWinKeyDown","onMacKeyDown","destroy","createImageAnnotator","UserSelectAction","createUndoStack","lifecycle","createLifecycleObserver","keyboardCommands","currentUser","createAnonymousGuest","_setTheme","annotationLayer","SVGAnnotationLayer","originalEvent","base","createBaseAnnotator","getUser","registerDrawingTool","registerShapeEditor","setDrawingTool","setDrawingEnabled","enabled","setFilter","setStyle","setUser","setVisible"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,18,19,20,21,26,45,46]}